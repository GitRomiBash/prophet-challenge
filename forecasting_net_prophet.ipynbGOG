{
  "cells": [
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "view-in-github",
        "colab_type": "text"
      },
      "source": [
        "<a href=\"https://colab.research.google.com/github/GitRomiBash/prophet-challenge/blob/main/forecasting_net_prophet.ipynbGOG\" target=\"_parent\"><img src=\"https://colab.research.google.com/assets/colab-badge.svg\" alt=\"Open In Colab\"/></a>"
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "lLcqr6BM12Ty"
      },
      "source": [
        "# Forecasting Net Prophet\n",
        "\n",
        "You’re a growth analyst at [MercadoLibre](http://investor.mercadolibre.com/about-us). With over 200 million users, MercadoLibre is the most popular e-commerce site in Latin America. You've been tasked with analyzing the company's financial and user data in clever ways to make the company grow. So, you want to find out if the ability to predict search traffic can translate into the ability to successfully trade the stock.\n",
        "\n",
        "The instructions for this Challenge are divided into four steps, as follows:\n",
        "\n",
        "* Step 1: Find unusual patterns in hourly Google search traffic\n",
        "\n",
        "* Step 2: Mine the search traffic data for seasonality\n",
        "\n",
        "* Step 3: Relate the search traffic to stock price patterns\n",
        "\n",
        "* Step 4: Create a time series model with Prophet\n",
        "\n",
        "The following subsections detail these steps."
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "zvLM4Muf12T6"
      },
      "source": [
        "## Install and import the required libraries and dependencies"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "jETJBREQ16et",
        "outputId": "f6056857-8db0-4551-ae40-f58577b22918"
      },
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Requirement already satisfied: prophet in /usr/local/lib/python3.10/dist-packages (1.1.5)\n",
            "Requirement already satisfied: cmdstanpy>=1.0.4 in /usr/local/lib/python3.10/dist-packages (from prophet) (1.2.2)\n",
            "Requirement already satisfied: numpy>=1.15.4 in /usr/local/lib/python3.10/dist-packages (from prophet) (1.25.2)\n",
            "Requirement already satisfied: matplotlib>=2.0.0 in /usr/local/lib/python3.10/dist-packages (from prophet) (3.7.1)\n",
            "Requirement already satisfied: pandas>=1.0.4 in /usr/local/lib/python3.10/dist-packages (from prophet) (2.0.3)\n",
            "Requirement already satisfied: holidays>=0.25 in /usr/local/lib/python3.10/dist-packages (from prophet) (0.46)\n",
            "Requirement already satisfied: tqdm>=4.36.1 in /usr/local/lib/python3.10/dist-packages (from prophet) (4.66.2)\n",
            "Requirement already satisfied: importlib-resources in /usr/local/lib/python3.10/dist-packages (from prophet) (6.4.0)\n",
            "Requirement already satisfied: stanio<2.0.0,>=0.4.0 in /usr/local/lib/python3.10/dist-packages (from cmdstanpy>=1.0.4->prophet) (0.5.0)\n",
            "Requirement already satisfied: python-dateutil in /usr/local/lib/python3.10/dist-packages (from holidays>=0.25->prophet) (2.8.2)\n",
            "Requirement already satisfied: contourpy>=1.0.1 in /usr/local/lib/python3.10/dist-packages (from matplotlib>=2.0.0->prophet) (1.2.1)\n",
            "Requirement already satisfied: cycler>=0.10 in /usr/local/lib/python3.10/dist-packages (from matplotlib>=2.0.0->prophet) (0.12.1)\n",
            "Requirement already satisfied: fonttools>=4.22.0 in /usr/local/lib/python3.10/dist-packages (from matplotlib>=2.0.0->prophet) (4.50.0)\n",
            "Requirement already satisfied: kiwisolver>=1.0.1 in /usr/local/lib/python3.10/dist-packages (from matplotlib>=2.0.0->prophet) (1.4.5)\n",
            "Requirement already satisfied: packaging>=20.0 in /usr/local/lib/python3.10/dist-packages (from matplotlib>=2.0.0->prophet) (24.0)\n",
            "Requirement already satisfied: pillow>=6.2.0 in /usr/local/lib/python3.10/dist-packages (from matplotlib>=2.0.0->prophet) (9.4.0)\n",
            "Requirement already satisfied: pyparsing>=2.3.1 in /usr/local/lib/python3.10/dist-packages (from matplotlib>=2.0.0->prophet) (3.1.2)\n",
            "Requirement already satisfied: pytz>=2020.1 in /usr/local/lib/python3.10/dist-packages (from pandas>=1.0.4->prophet) (2023.4)\n",
            "Requirement already satisfied: tzdata>=2022.1 in /usr/local/lib/python3.10/dist-packages (from pandas>=1.0.4->prophet) (2024.1)\n",
            "Requirement already satisfied: six>=1.5 in /usr/local/lib/python3.10/dist-packages (from python-dateutil->holidays>=0.25->prophet) (1.16.0)\n"
          ]
        }
      ],
      "source": [
        "# Install the required libraries\n",
        "!pip install prophet\n"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "id": "qnzrTQf512T7"
      },
      "outputs": [],
      "source": [
        "# Import the required libraries and dependencies\n",
        "import pandas as pd\n",
        "from prophet import Prophet\n",
        "import datetime as dt\n",
        "import numpy as np\n",
        "%matplotlib inline\n",
        "\n",
        "\n",
        "\n",
        "\n",
        "##MY CODE\n",
        "import matplotlib.pyplot as plt\n"
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "lNPLnTzk12T-"
      },
      "source": [
        "## Step 1: Find Unusual Patterns in Hourly Google Search Traffic\n",
        "\n",
        "The data science manager asks if the Google search traffic for the company links to any financial events at the company. Or, does the search traffic data just present random noise? To answer this question, pick out any unusual patterns in the Google search data for the company, and connect them to the corporate financial events.\n",
        "\n",
        "To do so, complete the following steps:\n",
        "\n",
        "1. Read the search data into a DataFrame, and then slice the data to just the month of May 2020. (During this month, MercadoLibre released its quarterly financial results.) Visualize the results. Do any unusual patterns exist?\n",
        "\n",
        "2. Calculate the total search traffic for the month, and then compare the value to the monthly median across all months. Did the Google search traffic increase during the month that MercadoLibre released its financial results?\n"
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "VgT_j6J412T-"
      },
      "source": [
        "#### Step 1: Read the search data into a DataFrame, and then slice the data to just the month of May 2020. (During this month, MercadoLibre released its quarterly financial results.) Visualize the results. Do any unusual patterns exist?"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 550
        },
        "id": "cztyn4NK12T_",
        "outputId": "1575f50b-4b9f-44ba-9ea2-695b41c76f08"
      },
      "outputs": [
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "<ipython-input-3-b9bc5439b517>:4: FutureWarning: The argument 'infer_datetime_format' is deprecated and will be removed in a future version. A strict version of it is now the default, see https://pandas.pydata.org/pdeps/0004-consistent-to-datetime-parsing.html. You can safely remove this argument.\n",
            "  df_mercado_trends = pd.read_csv(\n",
            "<ipython-input-3-b9bc5439b517>:4: UserWarning: Could not infer format, so each element will be parsed individually, falling back to `dateutil`. To ensure parsing is consistent and as-expected, please specify a format.\n",
            "  df_mercado_trends = pd.read_csv(\n"
          ]
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "                     Search Trends\n",
              "Date                              \n",
              "2016-06-01 00:00:00             97\n",
              "2016-06-01 01:00:00             92\n",
              "2016-06-01 02:00:00             76\n",
              "2016-06-01 03:00:00             60\n",
              "2016-06-01 04:00:00             38"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-434f3e0c-4024-4162-8fb4-3f09e64f24fb\" class=\"colab-df-container\">\n",
              "    <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>Search Trends</th>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>Date</th>\n",
              "      <th></th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>2016-06-01 00:00:00</th>\n",
              "      <td>97</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2016-06-01 01:00:00</th>\n",
              "      <td>92</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2016-06-01 02:00:00</th>\n",
              "      <td>76</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2016-06-01 03:00:00</th>\n",
              "      <td>60</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2016-06-01 04:00:00</th>\n",
              "      <td>38</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>\n",
              "    <div class=\"colab-df-buttons\">\n",
              "\n",
              "  <div class=\"colab-df-container\">\n",
              "    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-434f3e0c-4024-4162-8fb4-3f09e64f24fb')\"\n",
              "            title=\"Convert this dataframe to an interactive table.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n",
              "    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "\n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    .colab-df-buttons div {\n",
              "      margin-bottom: 4px;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "    <script>\n",
              "      const buttonEl =\n",
              "        document.querySelector('#df-434f3e0c-4024-4162-8fb4-3f09e64f24fb button.colab-df-convert');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      async function convertToInteractive(key) {\n",
              "        const element = document.querySelector('#df-434f3e0c-4024-4162-8fb4-3f09e64f24fb');\n",
              "        const dataTable =\n",
              "          await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                    [key], {});\n",
              "        if (!dataTable) return;\n",
              "\n",
              "        const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "          + ' to learn more about interactive tables.';\n",
              "        element.innerHTML = '';\n",
              "        dataTable['output_type'] = 'display_data';\n",
              "        await google.colab.output.renderOutput(dataTable, element);\n",
              "        const docLink = document.createElement('div');\n",
              "        docLink.innerHTML = docLinkHtml;\n",
              "        element.appendChild(docLink);\n",
              "      }\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "\n",
              "<div id=\"df-00c2a483-a5e4-4a92-bb8a-6f4bd9d83cd2\">\n",
              "  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-00c2a483-a5e4-4a92-bb8a-6f4bd9d83cd2')\"\n",
              "            title=\"Suggest charts\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "     width=\"24px\">\n",
              "    <g>\n",
              "        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n",
              "    </g>\n",
              "</svg>\n",
              "  </button>\n",
              "\n",
              "<style>\n",
              "  .colab-df-quickchart {\n",
              "      --bg-color: #E8F0FE;\n",
              "      --fill-color: #1967D2;\n",
              "      --hover-bg-color: #E2EBFA;\n",
              "      --hover-fill-color: #174EA6;\n",
              "      --disabled-fill-color: #AAA;\n",
              "      --disabled-bg-color: #DDD;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart {\n",
              "      --bg-color: #3B4455;\n",
              "      --fill-color: #D2E3FC;\n",
              "      --hover-bg-color: #434B5C;\n",
              "      --hover-fill-color: #FFFFFF;\n",
              "      --disabled-bg-color: #3B4455;\n",
              "      --disabled-fill-color: #666;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart {\n",
              "    background-color: var(--bg-color);\n",
              "    border: none;\n",
              "    border-radius: 50%;\n",
              "    cursor: pointer;\n",
              "    display: none;\n",
              "    fill: var(--fill-color);\n",
              "    height: 32px;\n",
              "    padding: 0;\n",
              "    width: 32px;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart:hover {\n",
              "    background-color: var(--hover-bg-color);\n",
              "    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "    fill: var(--button-hover-fill-color);\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart-complete:disabled,\n",
              "  .colab-df-quickchart-complete:disabled:hover {\n",
              "    background-color: var(--disabled-bg-color);\n",
              "    fill: var(--disabled-fill-color);\n",
              "    box-shadow: none;\n",
              "  }\n",
              "\n",
              "  .colab-df-spinner {\n",
              "    border: 2px solid var(--fill-color);\n",
              "    border-color: transparent;\n",
              "    border-bottom-color: var(--fill-color);\n",
              "    animation:\n",
              "      spin 1s steps(1) infinite;\n",
              "  }\n",
              "\n",
              "  @keyframes spin {\n",
              "    0% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "      border-left-color: var(--fill-color);\n",
              "    }\n",
              "    20% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    30% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    40% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    60% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    80% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "    90% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "  }\n",
              "</style>\n",
              "\n",
              "  <script>\n",
              "    async function quickchart(key) {\n",
              "      const quickchartButtonEl =\n",
              "        document.querySelector('#' + key + ' button');\n",
              "      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n",
              "      quickchartButtonEl.classList.add('colab-df-spinner');\n",
              "      try {\n",
              "        const charts = await google.colab.kernel.invokeFunction(\n",
              "            'suggestCharts', [key], {});\n",
              "      } catch (error) {\n",
              "        console.error('Error during call to suggestCharts:', error);\n",
              "      }\n",
              "      quickchartButtonEl.classList.remove('colab-df-spinner');\n",
              "      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n",
              "    }\n",
              "    (() => {\n",
              "      let quickchartButtonEl =\n",
              "        document.querySelector('#df-00c2a483-a5e4-4a92-bb8a-6f4bd9d83cd2 button');\n",
              "      quickchartButtonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "    })();\n",
              "  </script>\n",
              "</div>\n",
              "\n",
              "    </div>\n",
              "  </div>\n"
            ],
            "application/vnd.google.colaboratory.intrinsic+json": {
              "type": "dataframe",
              "summary": "{\n  \"name\": \"display(df_mercado_trends\",\n  \"rows\": 5,\n  \"fields\": [\n    {\n      \"column\": \"Date\",\n      \"properties\": {\n        \"dtype\": \"date\",\n        \"min\": \"2016-06-01 00:00:00\",\n        \"max\": \"2016-06-01 04:00:00\",\n        \"num_unique_values\": 5,\n        \"samples\": [\n          \"2016-06-01 01:00:00\",\n          \"2016-06-01 04:00:00\",\n          \"2016-06-01 02:00:00\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Search Trends\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 24,\n        \"min\": 38,\n        \"max\": 97,\n        \"num_unique_values\": 5,\n        \"samples\": [\n          92,\n          38,\n          76\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"
            }
          },
          "metadata": {}
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "                     Search Trends\n",
              "Date                              \n",
              "2020-09-07 20:00:00             71\n",
              "2020-09-07 21:00:00             83\n",
              "2020-09-07 22:00:00             96\n",
              "2020-09-07 23:00:00             97\n",
              "2020-09-08 00:00:00             96"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-2d56f683-4565-4369-8394-30c24c029965\" class=\"colab-df-container\">\n",
              "    <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>Search Trends</th>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>Date</th>\n",
              "      <th></th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>2020-09-07 20:00:00</th>\n",
              "      <td>71</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2020-09-07 21:00:00</th>\n",
              "      <td>83</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2020-09-07 22:00:00</th>\n",
              "      <td>96</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2020-09-07 23:00:00</th>\n",
              "      <td>97</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2020-09-08 00:00:00</th>\n",
              "      <td>96</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>\n",
              "    <div class=\"colab-df-buttons\">\n",
              "\n",
              "  <div class=\"colab-df-container\">\n",
              "    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-2d56f683-4565-4369-8394-30c24c029965')\"\n",
              "            title=\"Convert this dataframe to an interactive table.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n",
              "    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "\n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    .colab-df-buttons div {\n",
              "      margin-bottom: 4px;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "    <script>\n",
              "      const buttonEl =\n",
              "        document.querySelector('#df-2d56f683-4565-4369-8394-30c24c029965 button.colab-df-convert');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      async function convertToInteractive(key) {\n",
              "        const element = document.querySelector('#df-2d56f683-4565-4369-8394-30c24c029965');\n",
              "        const dataTable =\n",
              "          await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                    [key], {});\n",
              "        if (!dataTable) return;\n",
              "\n",
              "        const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "          + ' to learn more about interactive tables.';\n",
              "        element.innerHTML = '';\n",
              "        dataTable['output_type'] = 'display_data';\n",
              "        await google.colab.output.renderOutput(dataTable, element);\n",
              "        const docLink = document.createElement('div');\n",
              "        docLink.innerHTML = docLinkHtml;\n",
              "        element.appendChild(docLink);\n",
              "      }\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "\n",
              "<div id=\"df-6e5944c4-b66a-4b16-80c4-cf441f19f69a\">\n",
              "  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-6e5944c4-b66a-4b16-80c4-cf441f19f69a')\"\n",
              "            title=\"Suggest charts\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "     width=\"24px\">\n",
              "    <g>\n",
              "        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n",
              "    </g>\n",
              "</svg>\n",
              "  </button>\n",
              "\n",
              "<style>\n",
              "  .colab-df-quickchart {\n",
              "      --bg-color: #E8F0FE;\n",
              "      --fill-color: #1967D2;\n",
              "      --hover-bg-color: #E2EBFA;\n",
              "      --hover-fill-color: #174EA6;\n",
              "      --disabled-fill-color: #AAA;\n",
              "      --disabled-bg-color: #DDD;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart {\n",
              "      --bg-color: #3B4455;\n",
              "      --fill-color: #D2E3FC;\n",
              "      --hover-bg-color: #434B5C;\n",
              "      --hover-fill-color: #FFFFFF;\n",
              "      --disabled-bg-color: #3B4455;\n",
              "      --disabled-fill-color: #666;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart {\n",
              "    background-color: var(--bg-color);\n",
              "    border: none;\n",
              "    border-radius: 50%;\n",
              "    cursor: pointer;\n",
              "    display: none;\n",
              "    fill: var(--fill-color);\n",
              "    height: 32px;\n",
              "    padding: 0;\n",
              "    width: 32px;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart:hover {\n",
              "    background-color: var(--hover-bg-color);\n",
              "    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "    fill: var(--button-hover-fill-color);\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart-complete:disabled,\n",
              "  .colab-df-quickchart-complete:disabled:hover {\n",
              "    background-color: var(--disabled-bg-color);\n",
              "    fill: var(--disabled-fill-color);\n",
              "    box-shadow: none;\n",
              "  }\n",
              "\n",
              "  .colab-df-spinner {\n",
              "    border: 2px solid var(--fill-color);\n",
              "    border-color: transparent;\n",
              "    border-bottom-color: var(--fill-color);\n",
              "    animation:\n",
              "      spin 1s steps(1) infinite;\n",
              "  }\n",
              "\n",
              "  @keyframes spin {\n",
              "    0% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "      border-left-color: var(--fill-color);\n",
              "    }\n",
              "    20% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    30% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    40% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    60% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    80% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "    90% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "  }\n",
              "</style>\n",
              "\n",
              "  <script>\n",
              "    async function quickchart(key) {\n",
              "      const quickchartButtonEl =\n",
              "        document.querySelector('#' + key + ' button');\n",
              "      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n",
              "      quickchartButtonEl.classList.add('colab-df-spinner');\n",
              "      try {\n",
              "        const charts = await google.colab.kernel.invokeFunction(\n",
              "            'suggestCharts', [key], {});\n",
              "      } catch (error) {\n",
              "        console.error('Error during call to suggestCharts:', error);\n",
              "      }\n",
              "      quickchartButtonEl.classList.remove('colab-df-spinner');\n",
              "      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n",
              "    }\n",
              "    (() => {\n",
              "      let quickchartButtonEl =\n",
              "        document.querySelector('#df-6e5944c4-b66a-4b16-80c4-cf441f19f69a button');\n",
              "      quickchartButtonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "    })();\n",
              "  </script>\n",
              "</div>\n",
              "\n",
              "    </div>\n",
              "  </div>\n"
            ],
            "application/vnd.google.colaboratory.intrinsic+json": {
              "type": "dataframe",
              "summary": "{\n  \"name\": \"display(df_mercado_trends\",\n  \"rows\": 5,\n  \"fields\": [\n    {\n      \"column\": \"Date\",\n      \"properties\": {\n        \"dtype\": \"date\",\n        \"min\": \"2020-09-07 20:00:00\",\n        \"max\": \"2020-09-08 00:00:00\",\n        \"num_unique_values\": 5,\n        \"samples\": [\n          \"2020-09-07 21:00:00\",\n          \"2020-09-08 00:00:00\",\n          \"2020-09-07 22:00:00\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Search Trends\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 11,\n        \"min\": 71,\n        \"max\": 97,\n        \"num_unique_values\": 4,\n        \"samples\": [\n          83,\n          97,\n          71\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"
            }
          },
          "metadata": {}
        }
      ],
      "source": [
        "# Store the data in a Pandas DataFrame\n",
        "# Set the \"Date\" column as the Datetime Index.\n",
        "\n",
        "df_mercado_trends = pd.read_csv(\n",
        "    \"https://static.bc-edx.com/ai/ail-v-1-0/m8/lms/datasets/google_hourly_search_trends.csv\",\n",
        "    index_col='Date',\n",
        "    parse_dates=True,\n",
        "    infer_datetime_format=True\n",
        ").dropna()\n",
        "\n",
        "# Review the first and last five rows of the DataFrame\n",
        "display(df_mercado_trends.head())\n",
        "display(df_mercado_trends.tail())"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "sfm0FSiF12T_",
        "outputId": "03e955d8-357f-47ec-cd2a-d900e1ae1b71"
      },
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "<class 'pandas.core.frame.DataFrame'>\n",
            "DatetimeIndex: 37106 entries, 2016-06-01 00:00:00 to 2020-09-08 00:00:00\n",
            "Data columns (total 1 columns):\n",
            " #   Column         Non-Null Count  Dtype\n",
            "---  ------         --------------  -----\n",
            " 0   Search Trends  37106 non-null  int64\n",
            "dtypes: int64(1)\n",
            "memory usage: 579.8 KB\n"
          ]
        }
      ],
      "source": [
        "# Review the data types of the DataFrame using the info function\n",
        "df_mercado_trends.info()"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 564
        },
        "id": "3HSQMhNK12T_",
        "outputId": "3b4a4b01-399b-42a3-ffe7-b8c44b171865"
      },
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 1000x600 with 1 Axes>"
            ],
            "image/png": "iVBORw0KGgoAAAANSUhEUgAAA1gAAAIjCAYAAAAeDboeAAAAOXRFWHRTb2Z0d2FyZQBNYXRwbG90bGliIHZlcnNpb24zLjcuMSwgaHR0cHM6Ly9tYXRwbG90bGliLm9yZy/bCgiHAAAACXBIWXMAAA9hAAAPYQGoP6dpAAEAAElEQVR4nOy9ebwdVZU9vqruvW/MREJGiBiEbnBAEBQRZ9MytYiiNoqKLYrdaPtVbAeciShC24qgP2hpRURxgEZEVGxAW0YRRAEVZQoZgISML2+8Y/3+uPecOlW3hjPsSvLe3evz4ZOQ93JSr+6pU3vvtfbaXhAEARgMBoPBYDAYDAaD4Qx/V18Ag8FgMBgMBoPBYMwUcILFYDAYDAaDwWAwGETgBIvBYDAYDAaDwWAwiMAJFoPBYDAYDAaDwWAQgRMsBoPBYDAYDAaDwSACJ1gMBoPBYDAYDAaDQQROsBgMBoPBYDAYDAaDCJxgMRgMBoPBYDAYDAYROMFiMBgMBoPBYDAYDCJwgsVgMBiM3Q7XX389Dj74YAwMDMDzPGzfvn1XXxKDwWAwGFrgBIvBYDBmML797W/D8zz538DAAJYtW4ajjjoKF1xwAUZHR63Xvv322/HZz36WPPnZsmUL3vSmN2FwcBBf//rXcfnll2N4eJj031Ch3qNbb7216+tBEGD58uXwPA//+I//WNh1JKHVauHb3/42jj/+eCxfvhzDw8N49rOfjbPPPhtTU1OJf+eb3/wmDjzwQAwMDGD//ffHhRde2PU9V199Nf7pn/4J++67L4aGhvD3f//3+NCHPpT6WV577bV43vOeh4GBATztaU/DZz7zGTQaDcoflcFgMGYMOMFiMBiMHsCqVatw+eWX46KLLsK//du/AQA+8IEP4DnPeQ7uu+8+qzVvv/12nHXWWeQJ1l133YXR0VF87nOfw6mnnoq3vvWtqFQqpP9GEgYGBnDFFVd0/flvfvMbrF+/Hv39/YVfQxwTExP453/+Z2zatAn/8i//gvPPPx8veMEL8JnPfAbHHHMMgiCIfP9//dd/4V3vehee9axn4cILL8QRRxyB97///Tj33HMj33faaafhgQcewFvf+lZccMEFOProo/G1r30NRxxxBCYnJyPf+4tf/AInnHAC5s2bhwsvvBAnnHACzj77bLmPGAwGgxFDwGAwGIwZi0svvTQAENx1111dX7vpppuCwcHBYJ999gkmJiaM1/6P//iPAECwevVqgisNcdlll6Vesy3GxsZSvybu0etf//pgzz33DOr1euTr7373u4NDDz002GeffYLjjjuO7Jp0UK1Wg9tuu63rz88666wAQHDDDTfIP5uYmAgWLFjQdY0nn3xyMDw8HGzdulX+2a9//euuNcV9v+SSSyJ//sxnPjN47nOfG7kvn/jEJwLP84IHHnjA9kdjMBiMGQtmsBgMBqNH8cpXvhKf+tSnsGbNGnz3u9+Vf37ffffhHe94B/bdd18MDAxgyZIleOc734ktW7bI7/nsZz+LD3/4wwCAFStWSIndY489BgC49NJL8cpXvhKLFi1Cf38/nvnMZ+Kiiy7KvaaXv/zlOOWUUwAAz3/+8+F5Ht7xjnfIr1955ZU49NBDMTg4iD333BNvfetb8fjjj0fWeMc73oFZs2bhkUcewbHHHovZs2fj5JNPzv233/zmN2PLli244YYb5J/VajVcddVVeMtb3pL4d770pS/hRS96ERYsWIDBwUEceuihuOqqqyLf87KXvQzPfe5zE//+3//93+Ooo45Kvaa+vj686EUv6vrz173udQCABx54QP7Zr3/9a2zZsgWnn3565Hvf+973Ynx8HD/72c/kn7385S/XWvMvf/kL/vKXv+C0005DuVyWf3766acjCIKun5XBYDAYLBFkMBiMnsbb3vY2AMD//u//yj+74YYb8Oijj+Kf//mfceGFF+Kkk07CD37wAxx77LFSkvb6178eb37zmwEAX/nKV3D55Zfj8ssvx8KFCwEAF110EfbZZx98/OMfx3/+539i+fLlOP300/H1r38983o+8YlP4LTTTgMQyhrf8573AGj3Sr3pTW9CqVTCOeecg3e/+924+uqr8eIXv7hLpthoNHDUUUdh0aJF+NKXvoQTTzwx9148/elPxxFHHIHvf//78s9+8YtfYGRkBCeddFLi3/nqV7+KQw45BKtWrcIXvvAFlMtlvPGNb4wkM29729tw33334U9/+lPk795111148MEH8da3vjX32uLYsGEDAGDPPfeUf/aHP/wBAHDYYYdFvvfQQw+F7/vy6xRrLlu2DHvvvXfumgwGg9GT2NUUGoPBYDCKQ5ZEUGDu3LnBIYccIv8/SS74/e9/PwAQ3HzzzfLPsiSCSWscddRRwb777mt1zbVaLVi0aFHw7Gc/O5icnJR/ft111wUAgk9/+tPyz0455ZQAQPCxj30s99+K/3tf+9rXgtmzZ8vrf+Mb3xi84hWvCIIgSJQIxn/OWq0WPPvZzw5e+cpXyj/bvn17MDAwEHz0ox+NfO/73//+YHh4OFO+mIaVK1cGc+bMCbZt2yb/7L3vfW9QKpUSv3/hwoXBSSedlLnmqaeeGpRKpeDBBx+UfyY+47Vr13Z9//Of//zghS98ofG1MxgMxkwHM1gMBoPR45g1a1bETXBwcFD+fmpqCps3b8YLX/hCAMA999yjtaa6xsjICDZv3oyXvexlePTRRzEyMmJ8jXfffTeeeuopnH766RgYGJB/ftxxx+GAAw6IMEYC//qv/2r877zpTW/C5OQkrrvuOoyOjuK6665LlQcC0Z9z27ZtGBkZwUte8pLIfZo7dy5e+9rX4vvf/75kAJvNJn74wx/ihBNOMHZI/MIXvoAbb7wRX/ziFzFv3jz555OTk+jr60v8OwMDA13mFSquuOIKfPOb38SHPvQh7L///pE1ASQafOStyWAwGL0KTrAYDAajxzE2NobZs2fL/9+6dSv+3//7f1i8eDEGBwexcOFCrFixAgC0k6PbbrsNK1euxPDwMObNm4eFCxfi4x//uNEaKtasWQOg3bMUxwEHHCC/LlAul7H33nsb/zsLFy7EypUrccUVV+Dqq69Gs9nEG97whtTvv+666/DCF74QAwMDmD9/PhYuXIiLLrqo62d8+9vfjrVr1+KWW24BANx4443YuHGjlGjq4oc//CE++clP4tRTT+1KIAcHB1Gr1RL/3tTUVCQZVHHLLbfg1FNPxVFHHYXPf/7zXWsCQLVaNVqTwWAwehnl/G9hMBgMxkzF+vXrMTIygv3220/+2Zve9Cbcfvvt+PCHP4yDDz4Ys2bNQqvVwtFHH41Wq5W75iOPPIJXvepVOOCAA/DlL38Zy5cvR19fH37+85/jK1/5itYarujv74fv29UQ3/KWt+Dd7343NmzYgGOOOSbCEqm45ZZbcPzxx+OlL30p/r//7//D0qVLUalUcOmll3bZvR911FFYvHgxvvvd7+KlL30pvvvd72LJkiVYuXKl9nXdcMMNePvb347jjjsOF198cdfXly5dimaziaeeegqLFi2Sf16r1bBlyxYsW7as6+/ce++9OP744/HsZz8bV111VcTIQqwJAE8++SSWL18e+dqTTz6JF7zgBdrXz2AwGL0CZrAYDAajh3H55ZcDgHSy27ZtG2666SZ87GMfw1lnnYXXve51+Id/+Afsu+++XX/X87zENX/605+iWq3i2muvxXve8x4ce+yxWLlypRPbsc8++wAA/va3v3V97W9/+5v8OgVe97rXwfd9/Pa3v82UB/7P//wPBgYG8Mtf/hLvfOc7ccwxx6QmTKVSCW95y1tw1VVXYdu2bbjmmmvw5je/GaVSSeua7rzzTrzuda/DYYcdhh/96EddiRAAHHzwwQDackoVd999N1qtlvy6wCOPPIKjjz4aixYtws9//nPMmjVLe80nnngC69ev71qTwWAwGJxgMRgMRs/iV7/6FT73uc9hxYoV0sZcBPxBbIDt+eef3/X3Re9Q3MEvaY2RkRFceuml1td62GGHYdGiRbj44osjcrVf/OIXeOCBB3DcccdZrx3HrFmzcNFFF+Gzn/0sXvOa16R+X6lUgud5aDab8s8ee+wxXHPNNYnf/7a3vQ3btm3De97zHoyNjWm7B4qf7+lPfzquu+661ET1la98JebPn99lh3/RRRdhaGgoco82bNiAV7/61fB9H7/85S+l+2Mcz3rWs3DAAQfgG9/4RuTnvOiii+B5XqZ8ksFgMHoVLBFkMBiMHsAvfvEL/PWvf0Wj0cDGjRvxq1/9CjfccAP22WcfXHvttdI4Ys6cOXjpS1+K8847D/V6HXvttRf+93//F6tXr+5a89BDDwXQtlY/6aSTUKlU8JrXvAavfvWr0dfXh9e85jUymbjkkkuwaNEiPPnkk1bXX6lUcO655+Kf//mf8bKXvQxvfvObsXHjRnz1q1/F05/+dHzwgx+0vzkJELO4snDcccfhy1/+Mo4++mi85S1vwVNPPYWvf/3r2G+//XDfffd1ff8hhxyCZz/72bjyyitx4IEH4nnPe17uvzE6OoqjjjoK27Ztw4c//OEuM49nPOMZOOKIIwC0+6U+97nP4b3vfS/e+MY34qijjsItt9yC7373u/j85z+P+fPny7939NFH49FHH8VHPvIR3Hrrrbj11lvl1xYvXox/+Id/kP//H//xHzj++OPx6le/GieddBL+9Kc/4Wtf+xre9a534cADD8z9GRgMBqPnsItdDBkMBoNRIIQFufivr68vWLJkSfAP//APwVe/+tVgx44d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KpVDOpfdu3djzZo1eOKJJzAxMXFI5/J8h671wYOu9cGDrvXBg671wYOu9cGDrvXBg651FrNpPaIowp49e7Bq1SpUqzOvqNIMFoBqtYrDDz/8UE8jg4mJiUO+ueYKdK0PHnStDx50rQ8edK0PHnStDx50rQ8edK2zmC3rUSZzFUNFLhQKhUKhUCgUCoWCBHWwFAqFQqFQKBQKhYIEdbBmGYaHh3H55ZdjeHj4UE/leQ9d64MHXeuDB13rgwdd64MHXeuDB13rgwdd6yyeT+uhIhcKhUKhUCgUCoVCQYJmsBQKhUKhUCgUCoWCBHWwFAqFQqFQKBQKhYIEdbAUCoVCoVAoFAqFggR1sBQKhUKhUCgUCoWChDnrYG3evBmnnXYaxsfHsWzZMpx77rl46KGHMt8zOTmJTZs2YcmSJZg/fz7OO+887NixI3n9Jz/5Cd7ylrdgzZo1GB0dxfHHH4/PfOYzXb/r9ttvx/r16zE8PIxjjjkG1113XeH8oijC//pf/wsrV67E6Ogozj77bDzyyCOZ7znyyCNRqVQyf6644orCsYvmc+edd+INb3gDVq1ahUqlgq997WuFY/qga+2ez1/+5V92jXvccccVjuuCrrV7Pnv27MEll1yCI444AqOjozjjjDPwox/9qHBcF+bqWm/btg1//Md/jBe84AWoVqu45JJLur7npptuwm//9m9j4cKFmDdvHk455RR84QtfKJyzC7rW7rU+66yzusatVCp43eteVzhvG+bqWt9000141atehaVLl2JiYgIbN27Et771rcz36N148NZa78awa22ux9KlS3H00Udj1apVmbtxtq8HAHzjG9/Ahg0bMDo6ikWLFuHcc88tHPvee+/FmWeeiZGREaxZswZ/93d/l3n9/vvvx3nnnZes96c//enCMV1vYk7inHPOia699tpo69at0T333BP93u/9XrR27dpo7969yfdcdNFF0Zo1a6Lbbrst+u///u/o9NNPj84444zk9WuuuSZ673vfG91+++3Rz3/+8+gLX/hCNDo6Gn3uc59LvucXv/hFNDY2Fl166aXRAw88EH3uc5+LarVadOutt3rnd8UVV0QLFiyIvva1r0U/+clPoje+8Y3RUUcdFR04cCD5niOOOCL6q7/6q2jbtm3JH3P+NvQyn29+85vRRz/60eimm26KAET/9m//1uuyWqFr7Z7P5ZdfHp144omZcZ966qme1zYPXWv3fN70pjdFJ5xwQnTHHXdEjzzySHT55ZdHExMT0a9+9aue19fEXF3rRx99NHrve98b/cu//Et0yimnRO973/u6vue73/1udNNNN0UPPPBA9LOf/Sz69Kc/3dOcXdC1dq/1M888kxlz69atUa1Wi6699tqCVbVjrq71+973vuhv//Zvox/+8IfRww8/HF122WXR4OBg9OMf/zj5Hr0bD95a690Ydq03btyYrMerX/3qaP78+dHy5cujn/zkJ8nd+Cd/8iezej2++tWvRosWLYr+4R/+IXrooYei+++/P/ryl7/sHXfXrl3R8uXLo7e+9a3R1q1boy996UvR6Oho9H/+z/9JvueHP/xh9MEPfjD60pe+FK1YsSK66qqrvGO6MGcdrDyefPLJCEB0xx13RFEURTt37owGBwejr3zlK8n3PPjggxGA6K677nKO8573vCf6nd/5neT/H/7wh6MTTzwx8z3nn39+dM455zjHaLfb0YoVK6K///u/T762c+fOaHh4OPrSl76UfO2II46Y8Qc/0/kwLpE8dK3T+Vx++eXRySefPKNxZwJd68589u/fH9VqtejrX/965nvWr18fffSjH53R73Jhrqy1iVe84hVWo9+GU089NfrYxz5W+neZ0LV246qrrorGx8cLDa9eMRfXOsYJJ5wQffzjH7e+pndjB6HWWu/Gg7PW8d14/fXXZ9bj5JNPjqrV6qxdj0ajEa1evTr6p3/6pxm88yj6/Oc/Hy1atCiq1+vJ1z7ykY9Exx57rPX7JWs+ZymCeezatQsAsHjxYgDAli1b0Gg0cPbZZyffc9xxx2Ht2rW46667vOPEYwDAXXfdlRkDAM455xzvGI8++ii2b9+e+bkFCxZgw4YNXT93xRVXYMmSJTj11FPx93//92g2m973WWY+bOhaZ8d95JFHsGrVKqxbtw5vfetb8fjjj3vHnQl0rTvjNptNtFotjIyMZL5ndHQU3/ve97xj94q5stYzRRRFuO222/DQQw/h5S9/OWVMXWs3rrnmGrz5zW/GvHnzKOPN1bVut9vYs2dPZs6hoWudXWu9G8OvdXw3xuOYX2+327N2PX784x/j17/+NarVKk499VSsXLkSr33ta7F161bv+7/rrrvw8pe/HENDQ5n5PPTQQ3juuee8PztTDFBH61O0221ccskleOlLX4qTTjoJALB9+3YMDQ1h4cKFme9dvnw5tm/fbh3nBz/4Ab785S/jG9/4RvK17du3Y/ny5V1j7N69GwcOHMDo6GjXOPH4tp8zf/d73/terF+/HosXL8YPfvADXHbZZdi2bRuuvPJK53stMx8mdK2z89mwYQOuu+46HHvssdi2bRs+/vGP48wzz8TWrVsxPj7uHLsX6Fqn8xkfH8fGjRvx13/91zj++OOxfPlyfOlLX8Jdd92FY445xjlur5hLa90rdu3ahdWrV6Ner6NWq+Hzn/88XvWqV4nH1bV244c//CG2bt2Ka665hjLeXF7rT37yk9i7dy/e9KY39fwzEuhaZ9da78aDs9bj4+M4/fTT8f73vx+nnXYajj/+eHzxi1/EAw88gEqlMmvX4xe/+AWATq3elVdeiSOPPBKf+tSncNZZZ+Hhhx92Bka2b9+Oo446qmvc+LVFixZZf64M1MECsGnTJmzdulUUyd66dSt+//d/H5dffjle/epX9/xz119/Pd71rncl/7/llltQq9V6+tlLL700+feLXvQiDA0N4V3vehc2b96M4eFhzJ8/P3n9bW97G/7xH/+x53mFgq51Fq997Wsz427YsAFHHHEE/vVf/xUXXnhhT2O4oGudxRe+8AX8z//5P7F69WrUajWsX78eb3nLW7Bly5Ye35UbutbdGB8fxz333IO9e/fitttuw6WXXop169bhrLPO6nkMG3St3bjmmmvwwhe+EC95yUtm/LM2zNW1vuGGG/Dxj38cN998M5YtW9bznCXQtc6utd6N3Qi11uvWrcPdd9+NH/3oRxgeHsb69euxcePGGTGbDvZ6tNttAMBHP/pRnHfeeQCAa6+9Focffji+8pWv4F3vehdOPPFE/PKXvwQAnHnmmbjlllt6nhcDc97Buvjii/H1r38dd955Jw4//PDk6ytWrMDU1BR27tyZ8eB37NiBFStWZMZ44IEH8MpXvhLvfOc78bGPfSzz2ooVKzKqK/EYExMTGB0dxRvf+EZs2LAheW316tXYtm1b8n0rV67M/Nwpp5zifC8bNmxAs9nEY489hmOPPRb33HNP8trExERP8wkJXevitV64cCFe8IIX4Gc/+5nzd/cCXevutT766KNxxx13YN++fdi9ezdWrlyJ888/H+vWrXP+7l4w19a6V1Sr1SQ7eMopp+DBBx/E5s2bRQ6WrrUb+/btw4033oi/+qu/mvHP2jBX1/rGG2/En/7pn+IrX/lKF7UpFHSti9da78ZuMNb64osvxp133okHH3wQy5YtS+7Gs846C1EUzdr1iL9+wgknJK8PDw9j3bp1CZX0m9/8JhqNBgAkdoBrPvFrVJSq3HoeoN1uR5s2bYpWrVoVPfzww12vxwWPX/3qV5Ov/fSnP+0q8Nu6dWu0bNmy6EMf+pD193z4wx+OTjrppMzX3vKWt/RU4PfJT34y+dquXbu6Ch7z+OIXvxhVq9Xo2WefdX7PTOcDQiGvrnXv89mzZ0+0aNGi6DOf+Yzze3zQte59Ps8++2y0YMGCjHrQTDBX19rETEQu3vGOd0SveMUrevrePHSti9f62muvjYaHh6Onn366p/FcmMtrfcMNN0QjIyPR1772Ne/3RZHejS6EWOso0rvRBsla+9bj2WefjSYmJqJarTZr1yP+vylyMTU1FS1btsx7p8ciF1NTU8nXLrvssiAiF3PWwXr3u98dLViwILr99tszkpf79+9Pvueiiy6K1q5dG33nO9+J/vu//zvauHFjtHHjxuT1++67L1q6dGn0tre9LTPGk08+mXxPLFH5oQ99KHrwwQejq6++umeJyoULF0Y333xzdO+990a///u/n5Go/MEPfhBdddVV0T333BP9/Oc/j774xS9GS5cujS644ALvuL3MZ8+ePdHdd98d3X333RGA6Morr4zuvvvu6Je//OWM1jiGrrV7Ph/4wAei22+/PXr00Uej73//+9HZZ58dHXbYYZn3NRPoWrvnc+utt0a33HJL9Itf/CL69re/HZ188snRhg0bMgftTDBX1zqKouR8ePGLXxz98R//cXT33XdH999/f/L6Jz7xiejb3/529POf/zx64IEHok9+8pPRwMBA9H//7//teX1N6Fq71zrGy172suj8888vHK8Ic3Wtr7/++mhgYCC6+uqrM3PeuXNn8j16Nx68tda7MexaX3jhhcl63HDDDdH1118f/b//9/+if//3f0/uxne+852zdj2iqCNBv3r16uhb3/pW9NOf/jS68MILo2XLlnkdzp07d0bLly+P/uRP/iTaunVrdOONN0ZjY2MZp6xeryfP+cqVK6MPfvCD0d133x098sgj3jnnMWcdLADWP2bvkAMHDkTvec97okWLFkVjY2PRH/zB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\n"
          },
          "metadata": {}
        }
      ],
      "source": [
        "df_may_2020 = df_mercado_trends.loc['2020-05-01':'2020-05-31']\n",
        "\n",
        "# Plot to visualize the data for May 2020\n",
        "plt.figure(figsize=(10, 6))\n",
        "plt.plot(df_may_2020.index, df_may_2020['Search Trends'], linestyle='-')\n",
        "plt.title('Data for May 2020')\n",
        "plt.xlabel('Date')\n",
        "plt.ylabel('Search Trends')\n",
        "# plt.grid(False)\n",
        "# plt.xticks(rotation=45)\n",
        "# plt.tight_layout()\n",
        "plt.show()\n",
        "\n",
        "\n",
        "\n",
        "\n",
        "\n",
        "\n",
        "# # Slice the DataFrame to just the month of May 2020\n",
        "# df_may_2020 = df_mercado_trends.loc['2020-05-01':'2020-05-31']\n",
        "\n",
        "# # Plot to visualize the data for May 2020\n",
        "# plt.figure(figsize=(12, 6))\n",
        "# plt.plot(df_may_2020.index, df_may_2020['Search Trends'], linestyle='-')\n",
        "# plt.title('Data for May 2020')\n",
        "# plt.xlabel('Date')\n",
        "# plt.ylabel('Search Trends')\n",
        "# # plt.grid(False)\n",
        "# # plt.xticks(rotation=45)\n",
        "# # plt.tight_layout()\n",
        "# plt.show()\n",
        "\n",
        "\n",
        "# ############\n",
        "# df_may_2020.plot(\n",
        "#     title=\"TITLE\",\n",
        "#     figsize=[12, 6]\n",
        "# )"
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "eo9y14TY12UA"
      },
      "source": [
        "#### Step 2: Calculate the total search traffic for the month, and then compare the value to the monthly median across all months. Did the Google search traffic increase during the month that MercadoLibre released its financial results?"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "EimOMwen12UA",
        "outputId": "8c14d300-8f98-4c69-98d2-1368b36f0d18"
      },
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Traffic for May 2020/Search Trends:  38181\n"
          ]
        },
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "dtype('int64')"
            ]
          },
          "metadata": {},
          "execution_count": 6
        }
      ],
      "source": [
        "# Calculate the sum of the total search traffic for May 2020\n",
        "traffic_may_2020 = df_may_2020['Search Trends'].sum()\n",
        "\n",
        "\n",
        "# View the traffic_may_2020 value\n",
        "print(\"Traffic for May 2020/Search Trends: \", traffic_may_2020)\n",
        "traffic_may_2020.dtype"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "w4B9WQ2O12UB",
        "outputId": "fc4f9ffd-879e-454b-8854-f80bfb14e6ff"
      },
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Search Trends  35172.5\n",
            "Data type: <class 'numpy.float64'>\n"
          ]
        }
      ],
      "source": [
        "# Calcluate the monhtly median search traffic across all months\n",
        "# Group the DataFrame by index year and then index month, chain the sum and then the median functions\n",
        "monthly_median_traffic = df_mercado_trends.groupby([df_mercado_trends.index.year, df_mercado_trends.index.month])['Search Trends'].sum().median()\n",
        "\n",
        "# View the median_monthly_traffic value\n",
        "print(f\"Search Trends  {monthly_median_traffic}\")\n",
        "\n",
        "print(\"Data type:\", type(monthly_median_traffic))\n",
        "\n"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "SaUKnq1e12UB",
        "outputId": "4092c645-f777-4116-f3e5-bedbaafc3c10"
      },
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Search Trends   1.085536\n"
          ]
        }
      ],
      "source": [
        "# To compare the seach traffic for the month of May 2020 to the overall monthly median value,\n",
        "# Divide the may traffic total by the median monthly traffic\n",
        "var = round(traffic_may_2020/monthly_median_traffic, 6)\n",
        "print(\"Search Trends  \", var)"
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "8FzTTGQ-12UC"
      },
      "source": [
        "##### Answer the following question:"
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "UG979D-v12UC"
      },
      "source": [
        "**Question:** Did the Google search traffic increase during the month that MercadoLibre released its financial results?\n",
        "\n",
        "**Answer:** Yes, it did."
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "xvwtfvC112UC"
      },
      "source": [
        "## Step 2: Mine the Search Traffic Data for Seasonality\n",
        "\n",
        "Marketing realizes that they can use the hourly search data, too. If they can track and predict interest in the company and its platform for any time of day, they can focus their marketing efforts around the times that have the most traffic. This will get a greater return on investment (ROI) from their marketing budget.\n",
        "\n",
        "To that end, you want to mine the search traffic data for predictable seasonal patterns of interest in the company. To do so, complete the following steps:\n",
        "\n",
        "1. Group the hourly search data to plot the average traffic by the hour of day. Does the search traffic peak at a particular time of day or is it relatively consistent?\n",
        "\n",
        "2. Group the hourly search data to plot the average traffic by the day of the week (for example, Monday vs. Friday). Does the search traffic get busiest on any particular day of the week?\n",
        "\n",
        "3. Group the hourly search data to plot the average traffic by the week of the year. Does the search traffic tend to increase during the winter holiday period (weeks 40 through 52)?\n"
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "jk-qycB_rjqD"
      },
      "source": [
        "#### Step 1: Group the hourly search data to plot the average traffic by the hour of the day."
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 467
        },
        "id": "5I35keJxrjqD",
        "outputId": "9dc35a8f-07b7-4e0c-d2c7-1d0a9f895fba"
      },
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "<matplotlib.legend.Legend at 0x79e938cfd8d0>"
            ]
          },
          "metadata": {},
          "execution_count": 9
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 640x480 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {}
        }
      ],
      "source": [
        "# Group the hourly search data to plot the average traffic by the day of week ##HOUR OF DAY\n",
        "hourly = df_mercado_trends.index.hour\n",
        "df_mercado_trends['Search Trends'].groupby(hourly).mean().plot(label=\"Search Trends\")\n",
        "plt.legend()"
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "fBoKE-Kx12UC"
      },
      "source": [
        "#### Step 2: Group the hourly search data to plot the average traffic by the day of the week (for example, Monday vs. Friday)."
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 467
        },
        "id": "c3z3n5Mg12UD",
        "outputId": "1c582064-f825-4c8d-e358-cbca179af915"
      },
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "<matplotlib.legend.Legend at 0x79e937e81f90>"
            ]
          },
          "metadata": {},
          "execution_count": 10
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 640x480 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {}
        }
      ],
      "source": [
        "# Group the hourly search data to plot the average traffic by the day of week\n",
        "weekly = df_mercado_trends.index.dayofweek\n",
        "df_mercado_trends['Search Trends'].groupby(weekly).mean().plot(label=\"Search Trends\")\n",
        "plt.legend()"
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "86ZfZzMprjqD"
      },
      "source": [
        "#### Step 3: Group the hourly search data to plot the average traffic by the week of the year."
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 487
        },
        "id": "D1Gz33ZDrjqD",
        "outputId": "7b68ef7b-b18d-4152-c2a8-a4e0db52ca71"
      },
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 640x480 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {}
        }
      ],
      "source": [
        "# Group the hourly search data to plot the average traffic by the week of the year\n",
        "\n",
        "week_of_year = df_mercado_trends.index.isocalendar().week\n",
        "\n",
        "# Group by week of the year and calculate the average traffic\n",
        "average_traffic_by_week_of_year = df_mercado_trends.groupby(week_of_year)['Search Trends'].mean()\n",
        "\n",
        "# Plotting\n",
        "average_traffic_by_week_of_year.plot(label=\"Search Trends\")\n",
        "\n",
        "plt.xlabel('Date')\n",
        "\n",
        "plt.grid(False)\n",
        "plt.legend()\n",
        "plt.tight_layout()\n",
        "plt.show()\n",
        "\n"
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "U8rZ9rS612UE"
      },
      "source": [
        "##### Answer the following question:"
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "ZneaiiW-12UE"
      },
      "source": [
        "**Question:** Are there any time based trends that you can see in the data?\n",
        "\n",
        "**Answer:** For hourly it starts to pick back up and accelerate around 9am. For weekly the peak is on Tuesday. For weeks of year i see a last end spike up between weeks 42- 52.\n"
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "fI9MdNR512UG"
      },
      "source": [
        "## Step 3: Relate the Search Traffic to Stock Price Patterns\n",
        "\n",
        "You mention your work on the search traffic data during a meeting with people in the finance group at the company. They want to know if any relationship between the search data and the company stock price exists, and they ask if you can investigate.\n",
        "\n",
        "To do so, complete the following steps:\n",
        "\n",
        "1. Read in and plot the stock price data. Concatenate the stock price data to the search data in a single DataFrame.\n",
        "\n",
        "2. Market events emerged during the year of 2020 that many companies found difficult. But, after the initial shock to global financial markets, new customers and revenue increased for e-commerce platforms. Slice the data to just the first half of 2020 (`2020-01` to `2020-06` in the DataFrame), and then plot the data. Do both time series indicate a common trend that’s consistent with this narrative?\n",
        "\n",
        "3. Create a new column in the DataFrame named “Lagged Search Trends” that offsets, or shifts, the search traffic by one hour. Create two additional columns:\n",
        "\n",
        "    * “Stock Volatility”, which holds an exponentially weighted four-hour rolling average of the company’s stock volatility\n",
        "\n",
        "    * “Hourly Stock Return”, which holds the percent change of the company's stock price on an hourly basis\n",
        "\n",
        "4. Review the time series correlation, and then answer the following question: Does a predictable relationship exist between the lagged search traffic and the stock volatility or between the lagged search traffic and the stock price returns?\n"
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "OqkIVUU_12UG"
      },
      "source": [
        "#### Step 1: Read in and plot the stock price data. Concatenate the stock price data to the search data in a single DataFrame."
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 514
        },
        "id": "rKAzc9ew12UG",
        "outputId": "ae5973f9-86c7-457a-adb2-001c9ab3aae4"
      },
      "outputs": [
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "<ipython-input-12-6a0218088829>:3: FutureWarning: The argument 'infer_datetime_format' is deprecated and will be removed in a future version. A strict version of it is now the default, see https://pandas.pydata.org/pdeps/0004-consistent-to-datetime-parsing.html. You can safely remove this argument.\n",
            "  df_mercado_stock = pd.read_csv(\n"
          ]
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "                      close\n",
              "date                       \n",
              "2015-01-02 09:00:00  127.67\n",
              "2015-01-02 10:00:00  125.44\n",
              "2015-01-02 11:00:00  125.57\n",
              "2015-01-02 12:00:00  125.40\n",
              "2015-01-02 13:00:00  125.17"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-d8a02ff1-a55c-45cd-b990-6d614480699d\" class=\"colab-df-container\">\n",
              "    <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>close</th>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>date</th>\n",
              "      <th></th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>2015-01-02 09:00:00</th>\n",
              "      <td>127.67</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2015-01-02 10:00:00</th>\n",
              "      <td>125.44</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2015-01-02 11:00:00</th>\n",
              "      <td>125.57</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2015-01-02 12:00:00</th>\n",
              "      <td>125.40</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2015-01-02 13:00:00</th>\n",
              "      <td>125.17</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>\n",
              "    <div class=\"colab-df-buttons\">\n",
              "\n",
              "  <div class=\"colab-df-container\">\n",
              "    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-d8a02ff1-a55c-45cd-b990-6d614480699d')\"\n",
              "            title=\"Convert this dataframe to an interactive table.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n",
              "    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "\n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    .colab-df-buttons div {\n",
              "      margin-bottom: 4px;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "    <script>\n",
              "      const buttonEl =\n",
              "        document.querySelector('#df-d8a02ff1-a55c-45cd-b990-6d614480699d button.colab-df-convert');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      async function convertToInteractive(key) {\n",
              "        const element = document.querySelector('#df-d8a02ff1-a55c-45cd-b990-6d614480699d');\n",
              "        const dataTable =\n",
              "          await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                    [key], {});\n",
              "        if (!dataTable) return;\n",
              "\n",
              "        const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "          + ' to learn more about interactive tables.';\n",
              "        element.innerHTML = '';\n",
              "        dataTable['output_type'] = 'display_data';\n",
              "        await google.colab.output.renderOutput(dataTable, element);\n",
              "        const docLink = document.createElement('div');\n",
              "        docLink.innerHTML = docLinkHtml;\n",
              "        element.appendChild(docLink);\n",
              "      }\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "\n",
              "<div id=\"df-e54fe9a3-e705-4b26-b977-c2d589fdc7d8\">\n",
              "  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-e54fe9a3-e705-4b26-b977-c2d589fdc7d8')\"\n",
              "            title=\"Suggest charts\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "     width=\"24px\">\n",
              "    <g>\n",
              "        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n",
              "    </g>\n",
              "</svg>\n",
              "  </button>\n",
              "\n",
              "<style>\n",
              "  .colab-df-quickchart {\n",
              "      --bg-color: #E8F0FE;\n",
              "      --fill-color: #1967D2;\n",
              "      --hover-bg-color: #E2EBFA;\n",
              "      --hover-fill-color: #174EA6;\n",
              "      --disabled-fill-color: #AAA;\n",
              "      --disabled-bg-color: #DDD;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart {\n",
              "      --bg-color: #3B4455;\n",
              "      --fill-color: #D2E3FC;\n",
              "      --hover-bg-color: #434B5C;\n",
              "      --hover-fill-color: #FFFFFF;\n",
              "      --disabled-bg-color: #3B4455;\n",
              "      --disabled-fill-color: #666;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart {\n",
              "    background-color: var(--bg-color);\n",
              "    border: none;\n",
              "    border-radius: 50%;\n",
              "    cursor: pointer;\n",
              "    display: none;\n",
              "    fill: var(--fill-color);\n",
              "    height: 32px;\n",
              "    padding: 0;\n",
              "    width: 32px;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart:hover {\n",
              "    background-color: var(--hover-bg-color);\n",
              "    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "    fill: var(--button-hover-fill-color);\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart-complete:disabled,\n",
              "  .colab-df-quickchart-complete:disabled:hover {\n",
              "    background-color: var(--disabled-bg-color);\n",
              "    fill: var(--disabled-fill-color);\n",
              "    box-shadow: none;\n",
              "  }\n",
              "\n",
              "  .colab-df-spinner {\n",
              "    border: 2px solid var(--fill-color);\n",
              "    border-color: transparent;\n",
              "    border-bottom-color: var(--fill-color);\n",
              "    animation:\n",
              "      spin 1s steps(1) infinite;\n",
              "  }\n",
              "\n",
              "  @keyframes spin {\n",
              "    0% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "      border-left-color: var(--fill-color);\n",
              "    }\n",
              "    20% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    30% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    40% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    60% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    80% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "    90% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "  }\n",
              "</style>\n",
              "\n",
              "  <script>\n",
              "    async function quickchart(key) {\n",
              "      const quickchartButtonEl =\n",
              "        document.querySelector('#' + key + ' button');\n",
              "      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n",
              "      quickchartButtonEl.classList.add('colab-df-spinner');\n",
              "      try {\n",
              "        const charts = await google.colab.kernel.invokeFunction(\n",
              "            'suggestCharts', [key], {});\n",
              "      } catch (error) {\n",
              "        console.error('Error during call to suggestCharts:', error);\n",
              "      }\n",
              "      quickchartButtonEl.classList.remove('colab-df-spinner');\n",
              "      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n",
              "    }\n",
              "    (() => {\n",
              "      let quickchartButtonEl =\n",
              "        document.querySelector('#df-e54fe9a3-e705-4b26-b977-c2d589fdc7d8 button');\n",
              "      quickchartButtonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "    })();\n",
              "  </script>\n",
              "</div>\n",
              "\n",
              "    </div>\n",
              "  </div>\n"
            ],
            "application/vnd.google.colaboratory.intrinsic+json": {
              "type": "dataframe",
              "summary": "{\n  \"name\": \"display(df_mercado_stock\",\n  \"rows\": 5,\n  \"fields\": [\n    {\n      \"column\": \"date\",\n      \"properties\": {\n        \"dtype\": \"date\",\n        \"min\": \"2015-01-02 09:00:00\",\n        \"max\": \"2015-01-02 13:00:00\",\n        \"num_unique_values\": 5,\n        \"samples\": [\n          \"2015-01-02 10:00:00\",\n          \"2015-01-02 13:00:00\",\n          \"2015-01-02 11:00:00\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"close\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 1.0275942779132243,\n        \"min\": 125.17,\n        \"max\": 127.67,\n        \"num_unique_values\": 5,\n        \"samples\": [\n          125.44,\n          125.17,\n          125.57\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"
            }
          },
          "metadata": {}
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "                        close\n",
              "date                         \n",
              "2020-07-31 11:00:00  1105.780\n",
              "2020-07-31 12:00:00  1087.925\n",
              "2020-07-31 13:00:00  1095.800\n",
              "2020-07-31 14:00:00  1110.650\n",
              "2020-07-31 15:00:00  1122.510"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-9895a5eb-c494-40ab-b85a-e9f71e83b050\" class=\"colab-df-container\">\n",
              "    <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>close</th>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>date</th>\n",
              "      <th></th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>2020-07-31 11:00:00</th>\n",
              "      <td>1105.780</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2020-07-31 12:00:00</th>\n",
              "      <td>1087.925</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2020-07-31 13:00:00</th>\n",
              "      <td>1095.800</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2020-07-31 14:00:00</th>\n",
              "      <td>1110.650</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2020-07-31 15:00:00</th>\n",
              "      <td>1122.510</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>\n",
              "    <div class=\"colab-df-buttons\">\n",
              "\n",
              "  <div class=\"colab-df-container\">\n",
              "    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-9895a5eb-c494-40ab-b85a-e9f71e83b050')\"\n",
              "            title=\"Convert this dataframe to an interactive table.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n",
              "    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "\n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    .colab-df-buttons div {\n",
              "      margin-bottom: 4px;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "    <script>\n",
              "      const buttonEl =\n",
              "        document.querySelector('#df-9895a5eb-c494-40ab-b85a-e9f71e83b050 button.colab-df-convert');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      async function convertToInteractive(key) {\n",
              "        const element = document.querySelector('#df-9895a5eb-c494-40ab-b85a-e9f71e83b050');\n",
              "        const dataTable =\n",
              "          await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                    [key], {});\n",
              "        if (!dataTable) return;\n",
              "\n",
              "        const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "          + ' to learn more about interactive tables.';\n",
              "        element.innerHTML = '';\n",
              "        dataTable['output_type'] = 'display_data';\n",
              "        await google.colab.output.renderOutput(dataTable, element);\n",
              "        const docLink = document.createElement('div');\n",
              "        docLink.innerHTML = docLinkHtml;\n",
              "        element.appendChild(docLink);\n",
              "      }\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "\n",
              "<div id=\"df-cdf266bd-8995-4213-a30a-85755cbee574\">\n",
              "  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-cdf266bd-8995-4213-a30a-85755cbee574')\"\n",
              "            title=\"Suggest charts\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "     width=\"24px\">\n",
              "    <g>\n",
              "        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n",
              "    </g>\n",
              "</svg>\n",
              "  </button>\n",
              "\n",
              "<style>\n",
              "  .colab-df-quickchart {\n",
              "      --bg-color: #E8F0FE;\n",
              "      --fill-color: #1967D2;\n",
              "      --hover-bg-color: #E2EBFA;\n",
              "      --hover-fill-color: #174EA6;\n",
              "      --disabled-fill-color: #AAA;\n",
              "      --disabled-bg-color: #DDD;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart {\n",
              "      --bg-color: #3B4455;\n",
              "      --fill-color: #D2E3FC;\n",
              "      --hover-bg-color: #434B5C;\n",
              "      --hover-fill-color: #FFFFFF;\n",
              "      --disabled-bg-color: #3B4455;\n",
              "      --disabled-fill-color: #666;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart {\n",
              "    background-color: var(--bg-color);\n",
              "    border: none;\n",
              "    border-radius: 50%;\n",
              "    cursor: pointer;\n",
              "    display: none;\n",
              "    fill: var(--fill-color);\n",
              "    height: 32px;\n",
              "    padding: 0;\n",
              "    width: 32px;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart:hover {\n",
              "    background-color: var(--hover-bg-color);\n",
              "    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "    fill: var(--button-hover-fill-color);\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart-complete:disabled,\n",
              "  .colab-df-quickchart-complete:disabled:hover {\n",
              "    background-color: var(--disabled-bg-color);\n",
              "    fill: var(--disabled-fill-color);\n",
              "    box-shadow: none;\n",
              "  }\n",
              "\n",
              "  .colab-df-spinner {\n",
              "    border: 2px solid var(--fill-color);\n",
              "    border-color: transparent;\n",
              "    border-bottom-color: var(--fill-color);\n",
              "    animation:\n",
              "      spin 1s steps(1) infinite;\n",
              "  }\n",
              "\n",
              "  @keyframes spin {\n",
              "    0% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "      border-left-color: var(--fill-color);\n",
              "    }\n",
              "    20% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    30% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    40% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    60% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    80% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "    90% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "  }\n",
              "</style>\n",
              "\n",
              "  <script>\n",
              "    async function quickchart(key) {\n",
              "      const quickchartButtonEl =\n",
              "        document.querySelector('#' + key + ' button');\n",
              "      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n",
              "      quickchartButtonEl.classList.add('colab-df-spinner');\n",
              "      try {\n",
              "        const charts = await google.colab.kernel.invokeFunction(\n",
              "            'suggestCharts', [key], {});\n",
              "      } catch (error) {\n",
              "        console.error('Error during call to suggestCharts:', error);\n",
              "      }\n",
              "      quickchartButtonEl.classList.remove('colab-df-spinner');\n",
              "      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n",
              "    }\n",
              "    (() => {\n",
              "      let quickchartButtonEl =\n",
              "        document.querySelector('#df-cdf266bd-8995-4213-a30a-85755cbee574 button');\n",
              "      quickchartButtonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "    })();\n",
              "  </script>\n",
              "</div>\n",
              "\n",
              "    </div>\n",
              "  </div>\n"
            ],
            "application/vnd.google.colaboratory.intrinsic+json": {
              "type": "dataframe",
              "summary": "{\n  \"name\": \"display(df_mercado_stock\",\n  \"rows\": 5,\n  \"fields\": [\n    {\n      \"column\": \"date\",\n      \"properties\": {\n        \"dtype\": \"date\",\n        \"min\": \"2020-07-31 11:00:00\",\n        \"max\": \"2020-07-31 15:00:00\",\n        \"num_unique_values\": 5,\n        \"samples\": [\n          \"2020-07-31 12:00:00\",\n          \"2020-07-31 15:00:00\",\n          \"2020-07-31 13:00:00\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"close\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 13.362598736772753,\n        \"min\": 1087.925,\n        \"max\": 1122.51,\n        \"num_unique_values\": 5,\n        \"samples\": [\n          1087.925,\n          1122.51,\n          1095.8\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"
            }
          },
          "metadata": {}
        }
      ],
      "source": [
        "# Upload the \"mercado_stock_price.csv\" file into Colab, then store in a Pandas DataFrame\n",
        "# Set the \"date\" column as the Datetime Index.\n",
        "df_mercado_stock = pd.read_csv(\n",
        "    \"https://static.bc-edx.com/ai/ail-v-1-0/m8/lms/datasets/mercado_stock_price.csv\",\n",
        "    index_col=\"date\",\n",
        "    parse_dates=True,\n",
        "    infer_datetime_format=True\n",
        ").dropna()\n",
        "\n",
        "# View the first and last five rows of the DataFrame\n",
        "display(df_mercado_stock.head())\n",
        "display(df_mercado_stock.tail())"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 486
        },
        "id": "gPMCkpIB12UH",
        "outputId": "b272befd-6be3-4494-cfde-8e845538d626"
      },
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 700x500 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {}
        }
      ],
      "source": [
        "# Visualize the closing price of the df_mercado_stock DataFrame\n",
        "plt.figure(figsize=(7,5))\n",
        "plt.plot(df_mercado_stock.index, df_mercado_stock['close'], color='midnightblue')\n",
        "# plt.title('Closing Price of Mercado Stock')\n",
        "plt.xlabel('Date')\n",
        "# plt.ylabel('Closing Price')\n",
        "plt.grid(False)\n",
        "plt.xticks(rotation=45)\n",
        "plt.show()"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 395
        },
        "id": "5Mt44bD512UH",
        "outputId": "ca6861fd-805e-4d0c-c42f-aa4c73c09e07"
      },
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "                      close  Search Trends\n",
              "2016-06-01 09:00:00  135.16            6.0\n",
              "2016-06-01 10:00:00  136.63           12.0\n",
              "2016-06-01 11:00:00  136.56           22.0\n",
              "2016-06-01 12:00:00  136.42           33.0\n",
              "2016-06-01 13:00:00  136.10           40.0"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-f7030e5d-c21c-446f-b08f-63387cc6ab64\" class=\"colab-df-container\">\n",
              "    <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>close</th>\n",
              "      <th>Search Trends</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>2016-06-01 09:00:00</th>\n",
              "      <td>135.16</td>\n",
              "      <td>6.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2016-06-01 10:00:00</th>\n",
              "      <td>136.63</td>\n",
              "      <td>12.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2016-06-01 11:00:00</th>\n",
              "      <td>136.56</td>\n",
              "      <td>22.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2016-06-01 12:00:00</th>\n",
              "      <td>136.42</td>\n",
              "      <td>33.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2016-06-01 13:00:00</th>\n",
              "      <td>136.10</td>\n",
              "      <td>40.0</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>\n",
              "    <div class=\"colab-df-buttons\">\n",
              "\n",
              "  <div class=\"colab-df-container\">\n",
              "    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-f7030e5d-c21c-446f-b08f-63387cc6ab64')\"\n",
              "            title=\"Convert this dataframe to an interactive table.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n",
              "    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "\n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    .colab-df-buttons div {\n",
              "      margin-bottom: 4px;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "    <script>\n",
              "      const buttonEl =\n",
              "        document.querySelector('#df-f7030e5d-c21c-446f-b08f-63387cc6ab64 button.colab-df-convert');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      async function convertToInteractive(key) {\n",
              "        const element = document.querySelector('#df-f7030e5d-c21c-446f-b08f-63387cc6ab64');\n",
              "        const dataTable =\n",
              "          await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                    [key], {});\n",
              "        if (!dataTable) return;\n",
              "\n",
              "        const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "          + ' to learn more about interactive tables.';\n",
              "        element.innerHTML = '';\n",
              "        dataTable['output_type'] = 'display_data';\n",
              "        await google.colab.output.renderOutput(dataTable, element);\n",
              "        const docLink = document.createElement('div');\n",
              "        docLink.innerHTML = docLinkHtml;\n",
              "        element.appendChild(docLink);\n",
              "      }\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "\n",
              "<div id=\"df-4a0f6d79-7cf2-4e47-b43f-f17244930370\">\n",
              "  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-4a0f6d79-7cf2-4e47-b43f-f17244930370')\"\n",
              "            title=\"Suggest charts\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "     width=\"24px\">\n",
              "    <g>\n",
              "        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n",
              "    </g>\n",
              "</svg>\n",
              "  </button>\n",
              "\n",
              "<style>\n",
              "  .colab-df-quickchart {\n",
              "      --bg-color: #E8F0FE;\n",
              "      --fill-color: #1967D2;\n",
              "      --hover-bg-color: #E2EBFA;\n",
              "      --hover-fill-color: #174EA6;\n",
              "      --disabled-fill-color: #AAA;\n",
              "      --disabled-bg-color: #DDD;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart {\n",
              "      --bg-color: #3B4455;\n",
              "      --fill-color: #D2E3FC;\n",
              "      --hover-bg-color: #434B5C;\n",
              "      --hover-fill-color: #FFFFFF;\n",
              "      --disabled-bg-color: #3B4455;\n",
              "      --disabled-fill-color: #666;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart {\n",
              "    background-color: var(--bg-color);\n",
              "    border: none;\n",
              "    border-radius: 50%;\n",
              "    cursor: pointer;\n",
              "    display: none;\n",
              "    fill: var(--fill-color);\n",
              "    height: 32px;\n",
              "    padding: 0;\n",
              "    width: 32px;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart:hover {\n",
              "    background-color: var(--hover-bg-color);\n",
              "    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "    fill: var(--button-hover-fill-color);\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart-complete:disabled,\n",
              "  .colab-df-quickchart-complete:disabled:hover {\n",
              "    background-color: var(--disabled-bg-color);\n",
              "    fill: var(--disabled-fill-color);\n",
              "    box-shadow: none;\n",
              "  }\n",
              "\n",
              "  .colab-df-spinner {\n",
              "    border: 2px solid var(--fill-color);\n",
              "    border-color: transparent;\n",
              "    border-bottom-color: var(--fill-color);\n",
              "    animation:\n",
              "      spin 1s steps(1) infinite;\n",
              "  }\n",
              "\n",
              "  @keyframes spin {\n",
              "    0% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "      border-left-color: var(--fill-color);\n",
              "    }\n",
              "    20% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    30% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    40% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    60% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    80% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "    90% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "  }\n",
              "</style>\n",
              "\n",
              "  <script>\n",
              "    async function quickchart(key) {\n",
              "      const quickchartButtonEl =\n",
              "        document.querySelector('#' + key + ' button');\n",
              "      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n",
              "      quickchartButtonEl.classList.add('colab-df-spinner');\n",
              "      try {\n",
              "        const charts = await google.colab.kernel.invokeFunction(\n",
              "            'suggestCharts', [key], {});\n",
              "      } catch (error) {\n",
              "        console.error('Error during call to suggestCharts:', error);\n",
              "      }\n",
              "      quickchartButtonEl.classList.remove('colab-df-spinner');\n",
              "      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n",
              "    }\n",
              "    (() => {\n",
              "      let quickchartButtonEl =\n",
              "        document.querySelector('#df-4a0f6d79-7cf2-4e47-b43f-f17244930370 button');\n",
              "      quickchartButtonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "    })();\n",
              "  </script>\n",
              "</div>\n",
              "\n",
              "    </div>\n",
              "  </div>\n"
            ],
            "application/vnd.google.colaboratory.intrinsic+json": {
              "type": "dataframe",
              "summary": "{\n  \"name\": \"display(df_concatenated\",\n  \"rows\": 5,\n  \"fields\": [\n    {\n      \"column\": \"close\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.6023122113987063,\n        \"min\": 135.16,\n        \"max\": 136.63,\n        \"num_unique_values\": 5,\n        \"samples\": [\n          136.63,\n          136.1,\n          136.56\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Search Trends\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 14.135062787267696,\n        \"min\": 6.0,\n        \"max\": 40.0,\n        \"num_unique_values\": 5,\n        \"samples\": [\n          12.0,\n          40.0,\n          22.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"
            }
          },
          "metadata": {}
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "                        close  Search Trends\n",
              "2020-07-31 11:00:00  1105.780           20.0\n",
              "2020-07-31 12:00:00  1087.925           32.0\n",
              "2020-07-31 13:00:00  1095.800           41.0\n",
              "2020-07-31 14:00:00  1110.650           47.0\n",
              "2020-07-31 15:00:00  1122.510           53.0"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-c31df490-2bba-4e5e-9263-d5427c737156\" class=\"colab-df-container\">\n",
              "    <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>close</th>\n",
              "      <th>Search Trends</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>2020-07-31 11:00:00</th>\n",
              "      <td>1105.780</td>\n",
              "      <td>20.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2020-07-31 12:00:00</th>\n",
              "      <td>1087.925</td>\n",
              "      <td>32.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2020-07-31 13:00:00</th>\n",
              "      <td>1095.800</td>\n",
              "      <td>41.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2020-07-31 14:00:00</th>\n",
              "      <td>1110.650</td>\n",
              "      <td>47.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2020-07-31 15:00:00</th>\n",
              "      <td>1122.510</td>\n",
              "      <td>53.0</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>\n",
              "    <div class=\"colab-df-buttons\">\n",
              "\n",
              "  <div class=\"colab-df-container\">\n",
              "    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-c31df490-2bba-4e5e-9263-d5427c737156')\"\n",
              "            title=\"Convert this dataframe to an interactive table.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n",
              "    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "\n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    .colab-df-buttons div {\n",
              "      margin-bottom: 4px;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "    <script>\n",
              "      const buttonEl =\n",
              "        document.querySelector('#df-c31df490-2bba-4e5e-9263-d5427c737156 button.colab-df-convert');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      async function convertToInteractive(key) {\n",
              "        const element = document.querySelector('#df-c31df490-2bba-4e5e-9263-d5427c737156');\n",
              "        const dataTable =\n",
              "          await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                    [key], {});\n",
              "        if (!dataTable) return;\n",
              "\n",
              "        const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "          + ' to learn more about interactive tables.';\n",
              "        element.innerHTML = '';\n",
              "        dataTable['output_type'] = 'display_data';\n",
              "        await google.colab.output.renderOutput(dataTable, element);\n",
              "        const docLink = document.createElement('div');\n",
              "        docLink.innerHTML = docLinkHtml;\n",
              "        element.appendChild(docLink);\n",
              "      }\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "\n",
              "<div id=\"df-dc568daf-b748-4d09-8196-53a827e464d6\">\n",
              "  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-dc568daf-b748-4d09-8196-53a827e464d6')\"\n",
              "            title=\"Suggest charts\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "     width=\"24px\">\n",
              "    <g>\n",
              "        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n",
              "    </g>\n",
              "</svg>\n",
              "  </button>\n",
              "\n",
              "<style>\n",
              "  .colab-df-quickchart {\n",
              "      --bg-color: #E8F0FE;\n",
              "      --fill-color: #1967D2;\n",
              "      --hover-bg-color: #E2EBFA;\n",
              "      --hover-fill-color: #174EA6;\n",
              "      --disabled-fill-color: #AAA;\n",
              "      --disabled-bg-color: #DDD;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart {\n",
              "      --bg-color: #3B4455;\n",
              "      --fill-color: #D2E3FC;\n",
              "      --hover-bg-color: #434B5C;\n",
              "      --hover-fill-color: #FFFFFF;\n",
              "      --disabled-bg-color: #3B4455;\n",
              "      --disabled-fill-color: #666;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart {\n",
              "    background-color: var(--bg-color);\n",
              "    border: none;\n",
              "    border-radius: 50%;\n",
              "    cursor: pointer;\n",
              "    display: none;\n",
              "    fill: var(--fill-color);\n",
              "    height: 32px;\n",
              "    padding: 0;\n",
              "    width: 32px;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart:hover {\n",
              "    background-color: var(--hover-bg-color);\n",
              "    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "    fill: var(--button-hover-fill-color);\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart-complete:disabled,\n",
              "  .colab-df-quickchart-complete:disabled:hover {\n",
              "    background-color: var(--disabled-bg-color);\n",
              "    fill: var(--disabled-fill-color);\n",
              "    box-shadow: none;\n",
              "  }\n",
              "\n",
              "  .colab-df-spinner {\n",
              "    border: 2px solid var(--fill-color);\n",
              "    border-color: transparent;\n",
              "    border-bottom-color: var(--fill-color);\n",
              "    animation:\n",
              "      spin 1s steps(1) infinite;\n",
              "  }\n",
              "\n",
              "  @keyframes spin {\n",
              "    0% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "      border-left-color: var(--fill-color);\n",
              "    }\n",
              "    20% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    30% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    40% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    60% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    80% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "    90% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "  }\n",
              "</style>\n",
              "\n",
              "  <script>\n",
              "    async function quickchart(key) {\n",
              "      const quickchartButtonEl =\n",
              "        document.querySelector('#' + key + ' button');\n",
              "      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n",
              "      quickchartButtonEl.classList.add('colab-df-spinner');\n",
              "      try {\n",
              "        const charts = await google.colab.kernel.invokeFunction(\n",
              "            'suggestCharts', [key], {});\n",
              "      } catch (error) {\n",
              "        console.error('Error during call to suggestCharts:', error);\n",
              "      }\n",
              "      quickchartButtonEl.classList.remove('colab-df-spinner');\n",
              "      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n",
              "    }\n",
              "    (() => {\n",
              "      let quickchartButtonEl =\n",
              "        document.querySelector('#df-dc568daf-b748-4d09-8196-53a827e464d6 button');\n",
              "      quickchartButtonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "    })();\n",
              "  </script>\n",
              "</div>\n",
              "\n",
              "    </div>\n",
              "  </div>\n"
            ],
            "application/vnd.google.colaboratory.intrinsic+json": {
              "type": "dataframe",
              "summary": "{\n  \"name\": \"display(df_concatenated\",\n  \"rows\": 5,\n  \"fields\": [\n    {\n      \"column\": \"close\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 13.362598736772753,\n        \"min\": 1087.925,\n        \"max\": 1122.51,\n        \"num_unique_values\": 5,\n        \"samples\": [\n          1087.925,\n          1122.51,\n          1095.8\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Search Trends\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 12.973048986263793,\n        \"min\": 20.0,\n        \"max\": 53.0,\n        \"num_unique_values\": 5,\n        \"samples\": [\n          32.0,\n          53.0,\n          41.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"
            }
          },
          "metadata": {}
        }
      ],
      "source": [
        "# Concatenate the df_mercado_stock DataFrame with the df_mercado_trends DataFrame\n",
        "# Concatenate the DataFrame by columns (axis=1), and drop and rows with only one column of data\n",
        "\n",
        "#concatenating dataframes\n",
        "df_concatenated = pd.concat([df_mercado_stock, df_mercado_trends], axis=1)\n",
        "\n",
        "\n",
        "# Drop rows with only one column of data\n",
        "df_concatenated = df_concatenated.dropna(thresh=2)\n",
        "\n",
        "\n",
        "# View the first and last five rows of the DataFrame\n",
        "display(df_concatenated.head())\n",
        "display(df_concatenated.tail())"
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "aWaMSI4U12UI"
      },
      "source": [
        "#### Step 2: Market events emerged during the year of 2020 that many companies found difficult. But, after the initial shock to global financial markets, new customers and revenue increased for e-commerce platforms. Slice the data to just the first half of 2020 (`2020-01` to `2020-06` in the DataFrame), and then plot the data. Do both time series indicate a common trend that’s consistent with this narrative?"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 423
        },
        "id": "1KTYdkfK12UI",
        "outputId": "19d2ec03-f774-414e-8cda-7297a35cff96"
      },
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "                       close  Search Trends\n",
              "2020-01-02 09:00:00  601.085            9.0\n",
              "2020-01-02 10:00:00  601.290           14.0\n",
              "2020-01-02 11:00:00  615.410           25.0\n",
              "2020-01-02 12:00:00  611.400           37.0\n",
              "2020-01-02 13:00:00  611.830           50.0\n",
              "...                      ...            ...\n",
              "2020-06-30 11:00:00  976.170           17.0\n",
              "2020-06-30 12:00:00  977.500           27.0\n",
              "2020-06-30 13:00:00  973.230           37.0\n",
              "2020-06-30 14:00:00  976.500           45.0\n",
              "2020-06-30 15:00:00  984.930           51.0\n",
              "\n",
              "[807 rows x 2 columns]"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-d552eabd-e48d-4c03-aacf-3c4aa4b5cabb\" class=\"colab-df-container\">\n",
              "    <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>close</th>\n",
              "      <th>Search Trends</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>2020-01-02 09:00:00</th>\n",
              "      <td>601.085</td>\n",
              "      <td>9.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2020-01-02 10:00:00</th>\n",
              "      <td>601.290</td>\n",
              "      <td>14.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2020-01-02 11:00:00</th>\n",
              "      <td>615.410</td>\n",
              "      <td>25.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2020-01-02 12:00:00</th>\n",
              "      <td>611.400</td>\n",
              "      <td>37.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2020-01-02 13:00:00</th>\n",
              "      <td>611.830</td>\n",
              "      <td>50.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>...</th>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2020-06-30 11:00:00</th>\n",
              "      <td>976.170</td>\n",
              "      <td>17.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2020-06-30 12:00:00</th>\n",
              "      <td>977.500</td>\n",
              "      <td>27.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2020-06-30 13:00:00</th>\n",
              "      <td>973.230</td>\n",
              "      <td>37.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2020-06-30 14:00:00</th>\n",
              "      <td>976.500</td>\n",
              "      <td>45.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2020-06-30 15:00:00</th>\n",
              "      <td>984.930</td>\n",
              "      <td>51.0</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "<p>807 rows × 2 columns</p>\n",
              "</div>\n",
              "    <div class=\"colab-df-buttons\">\n",
              "\n",
              "  <div class=\"colab-df-container\">\n",
              "    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-d552eabd-e48d-4c03-aacf-3c4aa4b5cabb')\"\n",
              "            title=\"Convert this dataframe to an interactive table.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n",
              "    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "\n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    .colab-df-buttons div {\n",
              "      margin-bottom: 4px;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "    <script>\n",
              "      const buttonEl =\n",
              "        document.querySelector('#df-d552eabd-e48d-4c03-aacf-3c4aa4b5cabb button.colab-df-convert');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      async function convertToInteractive(key) {\n",
              "        const element = document.querySelector('#df-d552eabd-e48d-4c03-aacf-3c4aa4b5cabb');\n",
              "        const dataTable =\n",
              "          await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                    [key], {});\n",
              "        if (!dataTable) return;\n",
              "\n",
              "        const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "          + ' to learn more about interactive tables.';\n",
              "        element.innerHTML = '';\n",
              "        dataTable['output_type'] = 'display_data';\n",
              "        await google.colab.output.renderOutput(dataTable, element);\n",
              "        const docLink = document.createElement('div');\n",
              "        docLink.innerHTML = docLinkHtml;\n",
              "        element.appendChild(docLink);\n",
              "      }\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "\n",
              "<div id=\"df-49c1fe24-3a75-4657-898b-be1315ceaf88\">\n",
              "  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-49c1fe24-3a75-4657-898b-be1315ceaf88')\"\n",
              "            title=\"Suggest charts\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "     width=\"24px\">\n",
              "    <g>\n",
              "        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n",
              "    </g>\n",
              "</svg>\n",
              "  </button>\n",
              "\n",
              "<style>\n",
              "  .colab-df-quickchart {\n",
              "      --bg-color: #E8F0FE;\n",
              "      --fill-color: #1967D2;\n",
              "      --hover-bg-color: #E2EBFA;\n",
              "      --hover-fill-color: #174EA6;\n",
              "      --disabled-fill-color: #AAA;\n",
              "      --disabled-bg-color: #DDD;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart {\n",
              "      --bg-color: #3B4455;\n",
              "      --fill-color: #D2E3FC;\n",
              "      --hover-bg-color: #434B5C;\n",
              "      --hover-fill-color: #FFFFFF;\n",
              "      --disabled-bg-color: #3B4455;\n",
              "      --disabled-fill-color: #666;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart {\n",
              "    background-color: var(--bg-color);\n",
              "    border: none;\n",
              "    border-radius: 50%;\n",
              "    cursor: pointer;\n",
              "    display: none;\n",
              "    fill: var(--fill-color);\n",
              "    height: 32px;\n",
              "    padding: 0;\n",
              "    width: 32px;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart:hover {\n",
              "    background-color: var(--hover-bg-color);\n",
              "    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "    fill: var(--button-hover-fill-color);\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart-complete:disabled,\n",
              "  .colab-df-quickchart-complete:disabled:hover {\n",
              "    background-color: var(--disabled-bg-color);\n",
              "    fill: var(--disabled-fill-color);\n",
              "    box-shadow: none;\n",
              "  }\n",
              "\n",
              "  .colab-df-spinner {\n",
              "    border: 2px solid var(--fill-color);\n",
              "    border-color: transparent;\n",
              "    border-bottom-color: var(--fill-color);\n",
              "    animation:\n",
              "      spin 1s steps(1) infinite;\n",
              "  }\n",
              "\n",
              "  @keyframes spin {\n",
              "    0% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "      border-left-color: var(--fill-color);\n",
              "    }\n",
              "    20% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    30% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    40% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    60% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    80% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "    90% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "  }\n",
              "</style>\n",
              "\n",
              "  <script>\n",
              "    async function quickchart(key) {\n",
              "      const quickchartButtonEl =\n",
              "        document.querySelector('#' + key + ' button');\n",
              "      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n",
              "      quickchartButtonEl.classList.add('colab-df-spinner');\n",
              "      try {\n",
              "        const charts = await google.colab.kernel.invokeFunction(\n",
              "            'suggestCharts', [key], {});\n",
              "      } catch (error) {\n",
              "        console.error('Error during call to suggestCharts:', error);\n",
              "      }\n",
              "      quickchartButtonEl.classList.remove('colab-df-spinner');\n",
              "      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n",
              "    }\n",
              "    (() => {\n",
              "      let quickchartButtonEl =\n",
              "        document.querySelector('#df-49c1fe24-3a75-4657-898b-be1315ceaf88 button');\n",
              "      quickchartButtonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "    })();\n",
              "  </script>\n",
              "</div>\n",
              "\n",
              "  <div id=\"id_f38a4b3e-e3e3-4ae9-afbb-89429a5e308b\">\n",
              "    <style>\n",
              "      .colab-df-generate {\n",
              "        background-color: #E8F0FE;\n",
              "        border: none;\n",
              "        border-radius: 50%;\n",
              "        cursor: pointer;\n",
              "        display: none;\n",
              "        fill: #1967D2;\n",
              "        height: 32px;\n",
              "        padding: 0 0 0 0;\n",
              "        width: 32px;\n",
              "      }\n",
              "\n",
              "      .colab-df-generate:hover {\n",
              "        background-color: #E2EBFA;\n",
              "        box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "        fill: #174EA6;\n",
              "      }\n",
              "\n",
              "      [theme=dark] .colab-df-generate {\n",
              "        background-color: #3B4455;\n",
              "        fill: #D2E3FC;\n",
              "      }\n",
              "\n",
              "      [theme=dark] .colab-df-generate:hover {\n",
              "        background-color: #434B5C;\n",
              "        box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "        filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "        fill: #FFFFFF;\n",
              "      }\n",
              "    </style>\n",
              "    <button class=\"colab-df-generate\" onclick=\"generateWithVariable('df_first_half_2020')\"\n",
              "            title=\"Generate code using this dataframe.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "       width=\"24px\">\n",
              "    <path d=\"M7,19H8.4L18.45,9,17,7.55,7,17.6ZM5,21V16.75L18.45,3.32a2,2,0,0,1,2.83,0l1.4,1.43a1.91,1.91,0,0,1,.58,1.4,1.91,1.91,0,0,1-.58,1.4L9.25,21ZM18.45,9,17,7.55Zm-12,3A5.31,5.31,0,0,0,4.9,8.1,5.31,5.31,0,0,0,1,6.5,5.31,5.31,0,0,0,4.9,4.9,5.31,5.31,0,0,0,6.5,1,5.31,5.31,0,0,0,8.1,4.9,5.31,5.31,0,0,0,12,6.5,5.46,5.46,0,0,0,6.5,12Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "    <script>\n",
              "      (() => {\n",
              "      const buttonEl =\n",
              "        document.querySelector('#id_f38a4b3e-e3e3-4ae9-afbb-89429a5e308b button.colab-df-generate');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      buttonEl.onclick = () => {\n",
              "        google.colab.notebook.generateWithVariable('df_first_half_2020');\n",
              "      }\n",
              "      })();\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "    </div>\n",
              "  </div>\n"
            ],
            "application/vnd.google.colaboratory.intrinsic+json": {
              "type": "dataframe",
              "variable_name": "df_first_half_2020",
              "summary": "{\n  \"name\": \"df_first_half_2020\",\n  \"rows\": 807,\n  \"fields\": [\n    {\n      \"column\": \"close\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 147.87661681900423,\n        \"min\": 429.95,\n        \"max\": 993.98,\n        \"num_unique_values\": 800,\n        \"samples\": [\n          868.215,\n          853.145,\n          656.21\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Search Trends\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 18.421696963417755,\n        \"min\": 6.0,\n        \"max\": 76.0,\n        \"num_unique_values\": 64,\n        \"samples\": [\n          33.0,\n          35.0,\n          9.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"
            }
          },
          "metadata": {}
        }
      ],
      "source": [
        "# For the combined dataframe, slice to just the first half of 2020 (2020-01 through 2020-06)\n",
        "\n",
        "df_first_half_2020 = df_concatenated.loc['2020-01':'2020-06']\n",
        "\n",
        "\n",
        "# View the first and last five rows of first_half_2020 DataFrame\n",
        "display(df_first_half_2020)"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 427
        },
        "id": "bynt-3QV12UI",
        "outputId": "ed758c0f-00bf-4432-d1e3-e953cafe1663"
      },
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 700x500 with 2 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {}
        }
      ],
      "source": [
        "# Visualize the close and Search Trends data\n",
        "# Plot each column on a separate axes using the following syntax\n",
        "# `plot(subplots=True)`\n",
        "df_first_half_2020.plot(subplots=True, figsize=(7, 5))\n",
        "plt.show()"
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "qnrxcTZT12UI"
      },
      "source": [
        "##### Answer the following question:"
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "vBkC9MNX12UJ"
      },
      "source": [
        "**Question:** Do both time series indicate a common trend that’s consistent with this narrative?\n",
        "\n",
        "**Answer:** In truth, our evidence of a common trend between search activity and stock price is pretty limited. It does appear generally however that the low point for Mercado Libre's stock price, late March to early April, did coincide with lower search activity for the firm. Search activity does pick up along with its stock price, although the stock price from mid-April onward definitively outpaces search interest.\n",
        "\n",
        "There's one important thing to note: if you zoom in both graphs to the spike around May 5th, 2020, you'll find the date of the company's earnings release to the public. It looks like search traffic for the firm spiked about two hours before the firm's stock price spiked. This could indicate a predictable pattern (can Google Searches predict the stock price?), but an alternative explanation might just be that people tend to search for more information about the firm right before an earnings announcement gets released. We'd need to do a little more time-series research to see which explanation best fits the data."
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "8MDbU6SD12UJ"
      },
      "source": [
        "#### Step 3: Create a new column in the DataFrame named “Lagged Search Trends” that offsets, or shifts, the search traffic by one hour. Create two additional columns:\n",
        "\n",
        "* “Stock Volatility”, which holds an exponentially weighted four-hour rolling average of the company’s stock volatility\n",
        "\n",
        "* “Hourly Stock Return”, which holds the percent change of the company's stock price on an hourly basis\n"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "id": "nNFBId1812UJ"
      },
      "outputs": [],
      "source": [
        "# Create a new column in the mercado_stock_trends_df DataFrame called Lagged Search Trends\n",
        "# This column should shift the Search Trends information by one hour\n",
        "\n",
        "df_concatenated['Lagged Search Trends'] = df_concatenated['Search Trends'].shift(1)\n",
        "\n",
        "# display(df_concatenated.head())\n"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "id": "ySKeTjVY12UJ"
      },
      "outputs": [],
      "source": [
        "# Create a new column in the mercado_stock_trends_df DataFrame called Stock Volatility\n",
        "# This column should calculate the standard deviation of the closing stock price return data over a 4 period rolling window\n",
        "\n",
        "df_concatenated['Stock Volatility'] = df_concatenated['close'].pct_change().rolling(window=4).std()\n",
        "\n",
        "# display(df_concatenated.head())"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 482
        },
        "id": "jIJOEdlS12UJ",
        "outputId": "1005e222-a023-4010-a906-4cf020dd1119"
      },
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 700x500 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {}
        }
      ],
      "source": [
        "# Visualize the stock volatility\n",
        "\n",
        "# Plotting the stock volatility\n",
        "plt.figure(figsize=(7, 5))\n",
        "plt.plot(df_concatenated.index, df_concatenated['Stock Volatility'], color='midnightblue')\n",
        "# plt.title('Stock Volatility')\n",
        "# plt.xlabel('Date')\n",
        "# plt.ylabel('Volatility')\n",
        "plt.grid(False)\n",
        "plt.xticks(rotation=45)\n",
        "plt.show()"
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "FffeBt-w12UK"
      },
      "source": [
        "**Solution Note:** Note how volatility spiked, and tended to stay high, during the first half of 2020. This is a common characteristic of volatility in stock returns worldwide: high volatility days tend to be followed by yet more high volatility days. When it rains, it pours."
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "id": "nRBDj-I012UK"
      },
      "outputs": [],
      "source": [
        "# Create a new column in the mercado_stock_trends_df DataFrame called Hourly Stock Return\n",
        "# This column should calculate hourly return percentage of the closing price\n",
        "\n",
        "df_concatenated['Hourly Stock Return'] = df_concatenated['close'].pct_change()\n",
        "# display(df_concatenated.head())\n"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 449
        },
        "id": "e8_dQ_tT12UK",
        "outputId": "a9c1e70a-b770-4700-c87e-c03bb855722f"
      },
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "First five rows:\n"
          ]
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "                      close  Search Trends  Lagged Search Trends  \\\n",
              "2016-06-01 09:00:00  135.16            6.0                   NaN   \n",
              "2016-06-01 10:00:00  136.63           12.0                   6.0   \n",
              "2016-06-01 11:00:00  136.56           22.0                  12.0   \n",
              "2016-06-01 12:00:00  136.42           33.0                  22.0   \n",
              "2016-06-01 13:00:00  136.10           40.0                  33.0   \n",
              "\n",
              "                     Stock Volatility  Hourly Stock Return  \n",
              "2016-06-01 09:00:00               NaN                  NaN  \n",
              "2016-06-01 10:00:00               NaN             0.010876  \n",
              "2016-06-01 11:00:00               NaN            -0.000512  \n",
              "2016-06-01 12:00:00               NaN            -0.001025  \n",
              "2016-06-01 13:00:00          0.006134            -0.002346  "
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-c3ec47a1-e049-4455-8657-8655760ce787\" class=\"colab-df-container\">\n",
              "    <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>close</th>\n",
              "      <th>Search Trends</th>\n",
              "      <th>Lagged Search Trends</th>\n",
              "      <th>Stock Volatility</th>\n",
              "      <th>Hourly Stock Return</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>2016-06-01 09:00:00</th>\n",
              "      <td>135.16</td>\n",
              "      <td>6.0</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2016-06-01 10:00:00</th>\n",
              "      <td>136.63</td>\n",
              "      <td>12.0</td>\n",
              "      <td>6.0</td>\n",
              "      <td>NaN</td>\n",
              "      <td>0.010876</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2016-06-01 11:00:00</th>\n",
              "      <td>136.56</td>\n",
              "      <td>22.0</td>\n",
              "      <td>12.0</td>\n",
              "      <td>NaN</td>\n",
              "      <td>-0.000512</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2016-06-01 12:00:00</th>\n",
              "      <td>136.42</td>\n",
              "      <td>33.0</td>\n",
              "      <td>22.0</td>\n",
              "      <td>NaN</td>\n",
              "      <td>-0.001025</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2016-06-01 13:00:00</th>\n",
              "      <td>136.10</td>\n",
              "      <td>40.0</td>\n",
              "      <td>33.0</td>\n",
              "      <td>0.006134</td>\n",
              "      <td>-0.002346</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>\n",
              "    <div class=\"colab-df-buttons\">\n",
              "\n",
              "  <div class=\"colab-df-container\">\n",
              "    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-c3ec47a1-e049-4455-8657-8655760ce787')\"\n",
              "            title=\"Convert this dataframe to an interactive table.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n",
              "    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "\n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    .colab-df-buttons div {\n",
              "      margin-bottom: 4px;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "    <script>\n",
              "      const buttonEl =\n",
              "        document.querySelector('#df-c3ec47a1-e049-4455-8657-8655760ce787 button.colab-df-convert');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      async function convertToInteractive(key) {\n",
              "        const element = document.querySelector('#df-c3ec47a1-e049-4455-8657-8655760ce787');\n",
              "        const dataTable =\n",
              "          await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                    [key], {});\n",
              "        if (!dataTable) return;\n",
              "\n",
              "        const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "          + ' to learn more about interactive tables.';\n",
              "        element.innerHTML = '';\n",
              "        dataTable['output_type'] = 'display_data';\n",
              "        await google.colab.output.renderOutput(dataTable, element);\n",
              "        const docLink = document.createElement('div');\n",
              "        docLink.innerHTML = docLinkHtml;\n",
              "        element.appendChild(docLink);\n",
              "      }\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "\n",
              "<div id=\"df-ad5e9d06-30db-4e9c-a4ae-2fea6981f6b4\">\n",
              "  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-ad5e9d06-30db-4e9c-a4ae-2fea6981f6b4')\"\n",
              "            title=\"Suggest charts\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "     width=\"24px\">\n",
              "    <g>\n",
              "        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n",
              "    </g>\n",
              "</svg>\n",
              "  </button>\n",
              "\n",
              "<style>\n",
              "  .colab-df-quickchart {\n",
              "      --bg-color: #E8F0FE;\n",
              "      --fill-color: #1967D2;\n",
              "      --hover-bg-color: #E2EBFA;\n",
              "      --hover-fill-color: #174EA6;\n",
              "      --disabled-fill-color: #AAA;\n",
              "      --disabled-bg-color: #DDD;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart {\n",
              "      --bg-color: #3B4455;\n",
              "      --fill-color: #D2E3FC;\n",
              "      --hover-bg-color: #434B5C;\n",
              "      --hover-fill-color: #FFFFFF;\n",
              "      --disabled-bg-color: #3B4455;\n",
              "      --disabled-fill-color: #666;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart {\n",
              "    background-color: var(--bg-color);\n",
              "    border: none;\n",
              "    border-radius: 50%;\n",
              "    cursor: pointer;\n",
              "    display: none;\n",
              "    fill: var(--fill-color);\n",
              "    height: 32px;\n",
              "    padding: 0;\n",
              "    width: 32px;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart:hover {\n",
              "    background-color: var(--hover-bg-color);\n",
              "    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "    fill: var(--button-hover-fill-color);\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart-complete:disabled,\n",
              "  .colab-df-quickchart-complete:disabled:hover {\n",
              "    background-color: var(--disabled-bg-color);\n",
              "    fill: var(--disabled-fill-color);\n",
              "    box-shadow: none;\n",
              "  }\n",
              "\n",
              "  .colab-df-spinner {\n",
              "    border: 2px solid var(--fill-color);\n",
              "    border-color: transparent;\n",
              "    border-bottom-color: var(--fill-color);\n",
              "    animation:\n",
              "      spin 1s steps(1) infinite;\n",
              "  }\n",
              "\n",
              "  @keyframes spin {\n",
              "    0% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "      border-left-color: var(--fill-color);\n",
              "    }\n",
              "    20% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    30% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    40% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    60% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    80% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "    90% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "  }\n",
              "</style>\n",
              "\n",
              "  <script>\n",
              "    async function quickchart(key) {\n",
              "      const quickchartButtonEl =\n",
              "        document.querySelector('#' + key + ' button');\n",
              "      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n",
              "      quickchartButtonEl.classList.add('colab-df-spinner');\n",
              "      try {\n",
              "        const charts = await google.colab.kernel.invokeFunction(\n",
              "            'suggestCharts', [key], {});\n",
              "      } catch (error) {\n",
              "        console.error('Error during call to suggestCharts:', error);\n",
              "      }\n",
              "      quickchartButtonEl.classList.remove('colab-df-spinner');\n",
              "      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n",
              "    }\n",
              "    (() => {\n",
              "      let quickchartButtonEl =\n",
              "        document.querySelector('#df-ad5e9d06-30db-4e9c-a4ae-2fea6981f6b4 button');\n",
              "      quickchartButtonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "    })();\n",
              "  </script>\n",
              "</div>\n",
              "\n",
              "    </div>\n",
              "  </div>\n"
            ],
            "application/vnd.google.colaboratory.intrinsic+json": {
              "type": "dataframe",
              "summary": "{\n  \"name\": \"display(df_concatenated\",\n  \"rows\": 5,\n  \"fields\": [\n    {\n      \"column\": \"close\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.6023122113987063,\n        \"min\": 135.16,\n        \"max\": 136.63,\n        \"num_unique_values\": 5,\n        \"samples\": [\n          136.63,\n          136.1,\n          136.56\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Search Trends\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 14.135062787267696,\n        \"min\": 6.0,\n        \"max\": 40.0,\n        \"num_unique_values\": 5,\n        \"samples\": [\n          12.0,\n          40.0,\n          22.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Lagged Search Trends\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 11.84271928232701,\n        \"min\": 6.0,\n        \"max\": 33.0,\n        \"num_unique_values\": 4,\n        \"samples\": [\n          12.0,\n          33.0,\n          6.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Stock Volatility\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": null,\n        \"min\": 0.006134014634065187,\n        \"max\": 0.006134014634065187,\n        \"num_unique_values\": 1,\n        \"samples\": [\n          0.006134014634065187\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Hourly Stock Return\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.006134014634065187,\n        \"min\": -0.0023456971118603898,\n        \"max\": 0.010875998816217702,\n        \"num_unique_values\": 4,\n        \"samples\": [\n          -0.0005123325770327591\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"
            }
          },
          "metadata": {}
        },
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "\n",
            "Last five rows:\n"
          ]
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "                        close  Search Trends  Lagged Search Trends  \\\n",
              "2020-07-31 11:00:00  1105.780           20.0                  11.0   \n",
              "2020-07-31 12:00:00  1087.925           32.0                  20.0   \n",
              "2020-07-31 13:00:00  1095.800           41.0                  32.0   \n",
              "2020-07-31 14:00:00  1110.650           47.0                  41.0   \n",
              "2020-07-31 15:00:00  1122.510           53.0                  47.0   \n",
              "\n",
              "                     Stock Volatility  Hourly Stock Return  \n",
              "2020-07-31 11:00:00          0.012837             0.006380  \n",
              "2020-07-31 12:00:00          0.013549            -0.016147  \n",
              "2020-07-31 13:00:00          0.013295             0.007239  \n",
              "2020-07-31 14:00:00          0.013001             0.013552  \n",
              "2020-07-31 15:00:00          0.013566             0.010678  "
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-dffcfb94-a856-4c30-815f-df0ec882a70d\" class=\"colab-df-container\">\n",
              "    <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>close</th>\n",
              "      <th>Search Trends</th>\n",
              "      <th>Lagged Search Trends</th>\n",
              "      <th>Stock Volatility</th>\n",
              "      <th>Hourly Stock Return</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>2020-07-31 11:00:00</th>\n",
              "      <td>1105.780</td>\n",
              "      <td>20.0</td>\n",
              "      <td>11.0</td>\n",
              "      <td>0.012837</td>\n",
              "      <td>0.006380</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2020-07-31 12:00:00</th>\n",
              "      <td>1087.925</td>\n",
              "      <td>32.0</td>\n",
              "      <td>20.0</td>\n",
              "      <td>0.013549</td>\n",
              "      <td>-0.016147</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2020-07-31 13:00:00</th>\n",
              "      <td>1095.800</td>\n",
              "      <td>41.0</td>\n",
              "      <td>32.0</td>\n",
              "      <td>0.013295</td>\n",
              "      <td>0.007239</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2020-07-31 14:00:00</th>\n",
              "      <td>1110.650</td>\n",
              "      <td>47.0</td>\n",
              "      <td>41.0</td>\n",
              "      <td>0.013001</td>\n",
              "      <td>0.013552</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2020-07-31 15:00:00</th>\n",
              "      <td>1122.510</td>\n",
              "      <td>53.0</td>\n",
              "      <td>47.0</td>\n",
              "      <td>0.013566</td>\n",
              "      <td>0.010678</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>\n",
              "    <div class=\"colab-df-buttons\">\n",
              "\n",
              "  <div class=\"colab-df-container\">\n",
              "    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-dffcfb94-a856-4c30-815f-df0ec882a70d')\"\n",
              "            title=\"Convert this dataframe to an interactive table.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n",
              "    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "\n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    .colab-df-buttons div {\n",
              "      margin-bottom: 4px;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "    <script>\n",
              "      const buttonEl =\n",
              "        document.querySelector('#df-dffcfb94-a856-4c30-815f-df0ec882a70d button.colab-df-convert');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      async function convertToInteractive(key) {\n",
              "        const element = document.querySelector('#df-dffcfb94-a856-4c30-815f-df0ec882a70d');\n",
              "        const dataTable =\n",
              "          await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                    [key], {});\n",
              "        if (!dataTable) return;\n",
              "\n",
              "        const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "          + ' to learn more about interactive tables.';\n",
              "        element.innerHTML = '';\n",
              "        dataTable['output_type'] = 'display_data';\n",
              "        await google.colab.output.renderOutput(dataTable, element);\n",
              "        const docLink = document.createElement('div');\n",
              "        docLink.innerHTML = docLinkHtml;\n",
              "        element.appendChild(docLink);\n",
              "      }\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "\n",
              "<div id=\"df-9f8aedd7-1ab4-4da5-aec4-3437ae1c7312\">\n",
              "  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-9f8aedd7-1ab4-4da5-aec4-3437ae1c7312')\"\n",
              "            title=\"Suggest charts\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "     width=\"24px\">\n",
              "    <g>\n",
              "        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n",
              "    </g>\n",
              "</svg>\n",
              "  </button>\n",
              "\n",
              "<style>\n",
              "  .colab-df-quickchart {\n",
              "      --bg-color: #E8F0FE;\n",
              "      --fill-color: #1967D2;\n",
              "      --hover-bg-color: #E2EBFA;\n",
              "      --hover-fill-color: #174EA6;\n",
              "      --disabled-fill-color: #AAA;\n",
              "      --disabled-bg-color: #DDD;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart {\n",
              "      --bg-color: #3B4455;\n",
              "      --fill-color: #D2E3FC;\n",
              "      --hover-bg-color: #434B5C;\n",
              "      --hover-fill-color: #FFFFFF;\n",
              "      --disabled-bg-color: #3B4455;\n",
              "      --disabled-fill-color: #666;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart {\n",
              "    background-color: var(--bg-color);\n",
              "    border: none;\n",
              "    border-radius: 50%;\n",
              "    cursor: pointer;\n",
              "    display: none;\n",
              "    fill: var(--fill-color);\n",
              "    height: 32px;\n",
              "    padding: 0;\n",
              "    width: 32px;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart:hover {\n",
              "    background-color: var(--hover-bg-color);\n",
              "    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "    fill: var(--button-hover-fill-color);\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart-complete:disabled,\n",
              "  .colab-df-quickchart-complete:disabled:hover {\n",
              "    background-color: var(--disabled-bg-color);\n",
              "    fill: var(--disabled-fill-color);\n",
              "    box-shadow: none;\n",
              "  }\n",
              "\n",
              "  .colab-df-spinner {\n",
              "    border: 2px solid var(--fill-color);\n",
              "    border-color: transparent;\n",
              "    border-bottom-color: var(--fill-color);\n",
              "    animation:\n",
              "      spin 1s steps(1) infinite;\n",
              "  }\n",
              "\n",
              "  @keyframes spin {\n",
              "    0% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "      border-left-color: var(--fill-color);\n",
              "    }\n",
              "    20% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    30% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    40% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    60% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    80% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "    90% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "  }\n",
              "</style>\n",
              "\n",
              "  <script>\n",
              "    async function quickchart(key) {\n",
              "      const quickchartButtonEl =\n",
              "        document.querySelector('#' + key + ' button');\n",
              "      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n",
              "      quickchartButtonEl.classList.add('colab-df-spinner');\n",
              "      try {\n",
              "        const charts = await google.colab.kernel.invokeFunction(\n",
              "            'suggestCharts', [key], {});\n",
              "      } catch (error) {\n",
              "        console.error('Error during call to suggestCharts:', error);\n",
              "      }\n",
              "      quickchartButtonEl.classList.remove('colab-df-spinner');\n",
              "      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n",
              "    }\n",
              "    (() => {\n",
              "      let quickchartButtonEl =\n",
              "        document.querySelector('#df-9f8aedd7-1ab4-4da5-aec4-3437ae1c7312 button');\n",
              "      quickchartButtonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "    })();\n",
              "  </script>\n",
              "</div>\n",
              "\n",
              "    </div>\n",
              "  </div>\n"
            ],
            "application/vnd.google.colaboratory.intrinsic+json": {
              "type": "dataframe",
              "summary": "{\n  \"name\": \"display(df_concatenated\",\n  \"rows\": 5,\n  \"fields\": [\n    {\n      \"column\": \"close\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 13.362598736772753,\n        \"min\": 1087.925,\n        \"max\": 1122.51,\n        \"num_unique_values\": 5,\n        \"samples\": [\n          1087.925,\n          1122.51,\n          1095.8\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Search Trends\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 12.973048986263793,\n        \"min\": 20.0,\n        \"max\": 53.0,\n        \"num_unique_values\": 5,\n        \"samples\": [\n          32.0,\n          53.0,\n          41.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Lagged Search Trends\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 14.788509052639485,\n        \"min\": 11.0,\n        \"max\": 47.0,\n        \"num_unique_values\": 5,\n        \"samples\": [\n          20.0,\n          47.0,\n          32.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Stock Volatility\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.0003253676822247971,\n        \"min\": 0.012836966250999367,\n        \"max\": 0.013566023425534451,\n        \"num_unique_values\": 5,\n        \"samples\": [\n          0.01354852409822671,\n          0.013566023425534451,\n          0.013294587350275845\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Hourly Stock Return\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.01180371362636336,\n        \"min\": -0.016146973177304735,\n        \"max\": 0.013551743018799245,\n        \"num_unique_values\": 5,\n        \"samples\": [\n          -0.016146973177304735,\n          0.01067843154909287,\n          0.007238550451547754\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"
            }
          },
          "metadata": {}
        }
      ],
      "source": [
        "# View the first and last five rows of the mercado_stock_trends_df DataFrame\n",
        "\n",
        "print(\"First five rows:\")\n",
        "display(df_concatenated.head())\n",
        "\n",
        "print(\"\\nLast five rows:\")\n",
        "display(df_concatenated.tail())\n"
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "0ijd-NMF12UK"
      },
      "source": [
        "#### Step 4: Review the time series correlation, and then answer the following question: Does a predictable relationship exist between the lagged search traffic and the stock volatility or between the lagged search traffic and the stock price returns?"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 143
        },
        "id": "SBTDo89212UK",
        "outputId": "c2edeca8-44b1-4390-cc67-fe4122b87a4d"
      },
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "                      Stock Volatility  Lagged Search Trends  \\\n",
              "Stock Volatility              1.000000             -0.148938   \n",
              "Lagged Search Trends         -0.148938              1.000000   \n",
              "Hourly Stock Return           0.061424              0.017929   \n",
              "\n",
              "                      Hourly Stock Return  \n",
              "Stock Volatility                 0.061424  \n",
              "Lagged Search Trends             0.017929  \n",
              "Hourly Stock Return              1.000000  "
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-e92ebc6f-2470-41a3-b573-42df70b75a20\" class=\"colab-df-container\">\n",
              "    <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>Stock Volatility</th>\n",
              "      <th>Lagged Search Trends</th>\n",
              "      <th>Hourly Stock Return</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>Stock Volatility</th>\n",
              "      <td>1.000000</td>\n",
              "      <td>-0.148938</td>\n",
              "      <td>0.061424</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>Lagged Search Trends</th>\n",
              "      <td>-0.148938</td>\n",
              "      <td>1.000000</td>\n",
              "      <td>0.017929</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>Hourly Stock Return</th>\n",
              "      <td>0.061424</td>\n",
              "      <td>0.017929</td>\n",
              "      <td>1.000000</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>\n",
              "    <div class=\"colab-df-buttons\">\n",
              "\n",
              "  <div class=\"colab-df-container\">\n",
              "    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-e92ebc6f-2470-41a3-b573-42df70b75a20')\"\n",
              "            title=\"Convert this dataframe to an interactive table.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n",
              "    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "\n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    .colab-df-buttons div {\n",
              "      margin-bottom: 4px;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "    <script>\n",
              "      const buttonEl =\n",
              "        document.querySelector('#df-e92ebc6f-2470-41a3-b573-42df70b75a20 button.colab-df-convert');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      async function convertToInteractive(key) {\n",
              "        const element = document.querySelector('#df-e92ebc6f-2470-41a3-b573-42df70b75a20');\n",
              "        const dataTable =\n",
              "          await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                    [key], {});\n",
              "        if (!dataTable) return;\n",
              "\n",
              "        const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "          + ' to learn more about interactive tables.';\n",
              "        element.innerHTML = '';\n",
              "        dataTable['output_type'] = 'display_data';\n",
              "        await google.colab.output.renderOutput(dataTable, element);\n",
              "        const docLink = document.createElement('div');\n",
              "        docLink.innerHTML = docLinkHtml;\n",
              "        element.appendChild(docLink);\n",
              "      }\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "\n",
              "<div id=\"df-5577cf17-bee9-4141-81ee-b1718c5c91b8\">\n",
              "  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-5577cf17-bee9-4141-81ee-b1718c5c91b8')\"\n",
              "            title=\"Suggest charts\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "     width=\"24px\">\n",
              "    <g>\n",
              "        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n",
              "    </g>\n",
              "</svg>\n",
              "  </button>\n",
              "\n",
              "<style>\n",
              "  .colab-df-quickchart {\n",
              "      --bg-color: #E8F0FE;\n",
              "      --fill-color: #1967D2;\n",
              "      --hover-bg-color: #E2EBFA;\n",
              "      --hover-fill-color: #174EA6;\n",
              "      --disabled-fill-color: #AAA;\n",
              "      --disabled-bg-color: #DDD;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart {\n",
              "      --bg-color: #3B4455;\n",
              "      --fill-color: #D2E3FC;\n",
              "      --hover-bg-color: #434B5C;\n",
              "      --hover-fill-color: #FFFFFF;\n",
              "      --disabled-bg-color: #3B4455;\n",
              "      --disabled-fill-color: #666;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart {\n",
              "    background-color: var(--bg-color);\n",
              "    border: none;\n",
              "    border-radius: 50%;\n",
              "    cursor: pointer;\n",
              "    display: none;\n",
              "    fill: var(--fill-color);\n",
              "    height: 32px;\n",
              "    padding: 0;\n",
              "    width: 32px;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart:hover {\n",
              "    background-color: var(--hover-bg-color);\n",
              "    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "    fill: var(--button-hover-fill-color);\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart-complete:disabled,\n",
              "  .colab-df-quickchart-complete:disabled:hover {\n",
              "    background-color: var(--disabled-bg-color);\n",
              "    fill: var(--disabled-fill-color);\n",
              "    box-shadow: none;\n",
              "  }\n",
              "\n",
              "  .colab-df-spinner {\n",
              "    border: 2px solid var(--fill-color);\n",
              "    border-color: transparent;\n",
              "    border-bottom-color: var(--fill-color);\n",
              "    animation:\n",
              "      spin 1s steps(1) infinite;\n",
              "  }\n",
              "\n",
              "  @keyframes spin {\n",
              "    0% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "      border-left-color: var(--fill-color);\n",
              "    }\n",
              "    20% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    30% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    40% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    60% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    80% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "    90% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "  }\n",
              "</style>\n",
              "\n",
              "  <script>\n",
              "    async function quickchart(key) {\n",
              "      const quickchartButtonEl =\n",
              "        document.querySelector('#' + key + ' button');\n",
              "      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n",
              "      quickchartButtonEl.classList.add('colab-df-spinner');\n",
              "      try {\n",
              "        const charts = await google.colab.kernel.invokeFunction(\n",
              "            'suggestCharts', [key], {});\n",
              "      } catch (error) {\n",
              "        console.error('Error during call to suggestCharts:', error);\n",
              "      }\n",
              "      quickchartButtonEl.classList.remove('colab-df-spinner');\n",
              "      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n",
              "    }\n",
              "    (() => {\n",
              "      let quickchartButtonEl =\n",
              "        document.querySelector('#df-5577cf17-bee9-4141-81ee-b1718c5c91b8 button');\n",
              "      quickchartButtonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "    })();\n",
              "  </script>\n",
              "</div>\n",
              "\n",
              "  <div id=\"id_96c000fa-8ea4-469f-92cb-e5a52e4b207b\">\n",
              "    <style>\n",
              "      .colab-df-generate {\n",
              "        background-color: #E8F0FE;\n",
              "        border: none;\n",
              "        border-radius: 50%;\n",
              "        cursor: pointer;\n",
              "        display: none;\n",
              "        fill: #1967D2;\n",
              "        height: 32px;\n",
              "        padding: 0 0 0 0;\n",
              "        width: 32px;\n",
              "      }\n",
              "\n",
              "      .colab-df-generate:hover {\n",
              "        background-color: #E2EBFA;\n",
              "        box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "        fill: #174EA6;\n",
              "      }\n",
              "\n",
              "      [theme=dark] .colab-df-generate {\n",
              "        background-color: #3B4455;\n",
              "        fill: #D2E3FC;\n",
              "      }\n",
              "\n",
              "      [theme=dark] .colab-df-generate:hover {\n",
              "        background-color: #434B5C;\n",
              "        box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "        filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "        fill: #FFFFFF;\n",
              "      }\n",
              "    </style>\n",
              "    <button class=\"colab-df-generate\" onclick=\"generateWithVariable('correlation_table')\"\n",
              "            title=\"Generate code using this dataframe.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "       width=\"24px\">\n",
              "    <path d=\"M7,19H8.4L18.45,9,17,7.55,7,17.6ZM5,21V16.75L18.45,3.32a2,2,0,0,1,2.83,0l1.4,1.43a1.91,1.91,0,0,1,.58,1.4,1.91,1.91,0,0,1-.58,1.4L9.25,21ZM18.45,9,17,7.55Zm-12,3A5.31,5.31,0,0,0,4.9,8.1,5.31,5.31,0,0,0,1,6.5,5.31,5.31,0,0,0,4.9,4.9,5.31,5.31,0,0,0,6.5,1,5.31,5.31,0,0,0,8.1,4.9,5.31,5.31,0,0,0,12,6.5,5.46,5.46,0,0,0,6.5,12Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "    <script>\n",
              "      (() => {\n",
              "      const buttonEl =\n",
              "        document.querySelector('#id_96c000fa-8ea4-469f-92cb-e5a52e4b207b button.colab-df-generate');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      buttonEl.onclick = () => {\n",
              "        google.colab.notebook.generateWithVariable('correlation_table');\n",
              "      }\n",
              "      })();\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "    </div>\n",
              "  </div>\n"
            ],
            "application/vnd.google.colaboratory.intrinsic+json": {
              "type": "dataframe",
              "variable_name": "correlation_table",
              "summary": "{\n  \"name\": \"correlation_table\",\n  \"rows\": 3,\n  \"fields\": [\n    {\n      \"column\": \"Stock Volatility\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.6117237091725491,\n        \"min\": -0.14893794360392934,\n        \"max\": 1.0,\n        \"num_unique_values\": 3,\n        \"samples\": [\n          1.0,\n          -0.14893794360392934,\n          0.06142405160757613\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Lagged Search Trends\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.6208014433446287,\n        \"min\": -0.14893794360392934,\n        \"max\": 1.0,\n        \"num_unique_values\": 3,\n        \"samples\": [\n          -0.14893794360392934,\n          1.0,\n          0.017928896841116176\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Hourly Stock Return\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.5548693977037303,\n        \"min\": 0.017928896841116176,\n        \"max\": 1.0,\n        \"num_unique_values\": 3,\n        \"samples\": [\n          0.06142405160757613,\n          0.017928896841116176,\n          1.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"
            }
          },
          "metadata": {}
        }
      ],
      "source": [
        "# Construct correlation table of Stock Volatility, Lagged Search Trends, and Hourly Stock Return\n",
        "\n",
        "# Get the columns\n",
        "columns_of_interest = ['Stock Volatility', 'Lagged Search Trends', 'Hourly Stock Return']\n",
        "\n",
        "# Calculate the correlation matrix\n",
        "correlation_table = df_concatenated[columns_of_interest].corr()\n",
        "\n",
        "# Display the correlation table\n",
        "display(correlation_table)\n"
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "h-GH17Lx12UL"
      },
      "source": [
        "##### Answer the following question:\n"
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "VDe24Tla12UL"
      },
      "source": [
        "**Question:** Does a predictable relationship exist between the lagged search traffic and the stock volatility or between the lagged search traffic and the stock price returns?\n",
        "\n",
        "**Answer:** If we read down the second column (or read along the second row), we see that there's a slight negative correlation between searches for the firm and its subsequent stock volatility. More searches (slightly) tend to indicate less near-term hourly stock risk for the firm.\n",
        "\n",
        "On the other hand, there's a positive correlation between search activity in one hour and stock returns in the next: as search activity goes up, so will the firm's stock price in the short term. This effect is very weak though, only half the size of the effect on stock volatility. With the correlation so close to zero, some might also say that there's almost no relationship between these two variables whatsoever, and that the small findings that we do have could be just due to chance. While there's no required threshold when looking at correlation between stock returns and the variables used to predict them, it does tend to be that correlations in this context tend to be very low across the board. It's hard to predict the market!"
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "0pK2MFUk12UL"
      },
      "source": [
        "## Step 4: Create a Time Series Model with Prophet\n",
        "\n",
        "Now, you need to produce a time series model that analyzes and forecasts patterns in the hourly search data. To do so, complete the following steps:\n",
        "\n",
        "1. Set up the Google search data for a Prophet forecasting model.\n",
        "\n",
        "2. After estimating the model, plot the forecast. How's the near-term forecast for the popularity of MercadoLibre?\n",
        "\n",
        "3. Plot the individual time series components of the model to answer the following questions:\n",
        "\n",
        "    * What time of day exhibits the greatest popularity?\n",
        "\n",
        "    * Which day of the week gets the most search traffic?\n",
        "\n",
        "    * What's the lowest point for search traffic in the calendar year?\n"
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "jBewkPew12UL"
      },
      "source": [
        "#### Step 1: Set up the Google search data for a Prophet forecasting model."
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 449
        },
        "id": "NQ69E7pl12UL",
        "outputId": "a01c0680-8dc4-4944-f6be-ea444c12b392"
      },
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "First five rows:\n"
          ]
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "                   ds   y\n",
              "0 2016-06-01 00:00:00  97\n",
              "1 2016-06-01 01:00:00  92\n",
              "2 2016-06-01 02:00:00  76\n",
              "3 2016-06-01 03:00:00  60\n",
              "4 2016-06-01 04:00:00  38"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-b74a66bb-bdb1-4375-a58d-3444d2c3c3a7\" class=\"colab-df-container\">\n",
              "    <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>ds</th>\n",
              "      <th>y</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>2016-06-01 00:00:00</td>\n",
              "      <td>97</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>2016-06-01 01:00:00</td>\n",
              "      <td>92</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>2016-06-01 02:00:00</td>\n",
              "      <td>76</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>2016-06-01 03:00:00</td>\n",
              "      <td>60</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>2016-06-01 04:00:00</td>\n",
              "      <td>38</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>\n",
              "    <div class=\"colab-df-buttons\">\n",
              "\n",
              "  <div class=\"colab-df-container\">\n",
              "    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-b74a66bb-bdb1-4375-a58d-3444d2c3c3a7')\"\n",
              "            title=\"Convert this dataframe to an interactive table.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n",
              "    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "\n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    .colab-df-buttons div {\n",
              "      margin-bottom: 4px;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "    <script>\n",
              "      const buttonEl =\n",
              "        document.querySelector('#df-b74a66bb-bdb1-4375-a58d-3444d2c3c3a7 button.colab-df-convert');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      async function convertToInteractive(key) {\n",
              "        const element = document.querySelector('#df-b74a66bb-bdb1-4375-a58d-3444d2c3c3a7');\n",
              "        const dataTable =\n",
              "          await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                    [key], {});\n",
              "        if (!dataTable) return;\n",
              "\n",
              "        const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "          + ' to learn more about interactive tables.';\n",
              "        element.innerHTML = '';\n",
              "        dataTable['output_type'] = 'display_data';\n",
              "        await google.colab.output.renderOutput(dataTable, element);\n",
              "        const docLink = document.createElement('div');\n",
              "        docLink.innerHTML = docLinkHtml;\n",
              "        element.appendChild(docLink);\n",
              "      }\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "\n",
              "<div id=\"df-a250e251-933b-48db-ac11-8c21045fa379\">\n",
              "  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-a250e251-933b-48db-ac11-8c21045fa379')\"\n",
              "            title=\"Suggest charts\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "     width=\"24px\">\n",
              "    <g>\n",
              "        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n",
              "    </g>\n",
              "</svg>\n",
              "  </button>\n",
              "\n",
              "<style>\n",
              "  .colab-df-quickchart {\n",
              "      --bg-color: #E8F0FE;\n",
              "      --fill-color: #1967D2;\n",
              "      --hover-bg-color: #E2EBFA;\n",
              "      --hover-fill-color: #174EA6;\n",
              "      --disabled-fill-color: #AAA;\n",
              "      --disabled-bg-color: #DDD;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart {\n",
              "      --bg-color: #3B4455;\n",
              "      --fill-color: #D2E3FC;\n",
              "      --hover-bg-color: #434B5C;\n",
              "      --hover-fill-color: #FFFFFF;\n",
              "      --disabled-bg-color: #3B4455;\n",
              "      --disabled-fill-color: #666;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart {\n",
              "    background-color: var(--bg-color);\n",
              "    border: none;\n",
              "    border-radius: 50%;\n",
              "    cursor: pointer;\n",
              "    display: none;\n",
              "    fill: var(--fill-color);\n",
              "    height: 32px;\n",
              "    padding: 0;\n",
              "    width: 32px;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart:hover {\n",
              "    background-color: var(--hover-bg-color);\n",
              "    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "    fill: var(--button-hover-fill-color);\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart-complete:disabled,\n",
              "  .colab-df-quickchart-complete:disabled:hover {\n",
              "    background-color: var(--disabled-bg-color);\n",
              "    fill: var(--disabled-fill-color);\n",
              "    box-shadow: none;\n",
              "  }\n",
              "\n",
              "  .colab-df-spinner {\n",
              "    border: 2px solid var(--fill-color);\n",
              "    border-color: transparent;\n",
              "    border-bottom-color: var(--fill-color);\n",
              "    animation:\n",
              "      spin 1s steps(1) infinite;\n",
              "  }\n",
              "\n",
              "  @keyframes spin {\n",
              "    0% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "      border-left-color: var(--fill-color);\n",
              "    }\n",
              "    20% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    30% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    40% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    60% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    80% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "    90% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "  }\n",
              "</style>\n",
              "\n",
              "  <script>\n",
              "    async function quickchart(key) {\n",
              "      const quickchartButtonEl =\n",
              "        document.querySelector('#' + key + ' button');\n",
              "      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n",
              "      quickchartButtonEl.classList.add('colab-df-spinner');\n",
              "      try {\n",
              "        const charts = await google.colab.kernel.invokeFunction(\n",
              "            'suggestCharts', [key], {});\n",
              "      } catch (error) {\n",
              "        console.error('Error during call to suggestCharts:', error);\n",
              "      }\n",
              "      quickchartButtonEl.classList.remove('colab-df-spinner');\n",
              "      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n",
              "    }\n",
              "    (() => {\n",
              "      let quickchartButtonEl =\n",
              "        document.querySelector('#df-a250e251-933b-48db-ac11-8c21045fa379 button');\n",
              "      quickchartButtonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "    })();\n",
              "  </script>\n",
              "</div>\n",
              "\n",
              "    </div>\n",
              "  </div>\n"
            ],
            "application/vnd.google.colaboratory.intrinsic+json": {
              "type": "dataframe",
              "summary": "{\n  \"name\": \"display(df_mercado_trends_reset\",\n  \"rows\": 5,\n  \"fields\": [\n    {\n      \"column\": \"ds\",\n      \"properties\": {\n        \"dtype\": \"date\",\n        \"min\": \"2016-06-01 00:00:00\",\n        \"max\": \"2016-06-01 04:00:00\",\n        \"num_unique_values\": 5,\n        \"samples\": [\n          \"2016-06-01 01:00:00\",\n          \"2016-06-01 04:00:00\",\n          \"2016-06-01 02:00:00\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"y\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 24,\n        \"min\": 38,\n        \"max\": 97,\n        \"num_unique_values\": 5,\n        \"samples\": [\n          92,\n          38,\n          76\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"
            }
          },
          "metadata": {}
        },
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "\n",
            "Last five rows:\n"
          ]
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "                       ds   y\n",
              "37101 2020-09-07 20:00:00  71\n",
              "37102 2020-09-07 21:00:00  83\n",
              "37103 2020-09-07 22:00:00  96\n",
              "37104 2020-09-07 23:00:00  97\n",
              "37105 2020-09-08 00:00:00  96"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-e001b651-0b24-45cd-9b0a-6e8a7253b999\" class=\"colab-df-container\">\n",
              "    <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>ds</th>\n",
              "      <th>y</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>37101</th>\n",
              "      <td>2020-09-07 20:00:00</td>\n",
              "      <td>71</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>37102</th>\n",
              "      <td>2020-09-07 21:00:00</td>\n",
              "      <td>83</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>37103</th>\n",
              "      <td>2020-09-07 22:00:00</td>\n",
              "      <td>96</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>37104</th>\n",
              "      <td>2020-09-07 23:00:00</td>\n",
              "      <td>97</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>37105</th>\n",
              "      <td>2020-09-08 00:00:00</td>\n",
              "      <td>96</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>\n",
              "    <div class=\"colab-df-buttons\">\n",
              "\n",
              "  <div class=\"colab-df-container\">\n",
              "    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-e001b651-0b24-45cd-9b0a-6e8a7253b999')\"\n",
              "            title=\"Convert this dataframe to an interactive table.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n",
              "    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "\n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    .colab-df-buttons div {\n",
              "      margin-bottom: 4px;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "    <script>\n",
              "      const buttonEl =\n",
              "        document.querySelector('#df-e001b651-0b24-45cd-9b0a-6e8a7253b999 button.colab-df-convert');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      async function convertToInteractive(key) {\n",
              "        const element = document.querySelector('#df-e001b651-0b24-45cd-9b0a-6e8a7253b999');\n",
              "        const dataTable =\n",
              "          await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                    [key], {});\n",
              "        if (!dataTable) return;\n",
              "\n",
              "        const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "          + ' to learn more about interactive tables.';\n",
              "        element.innerHTML = '';\n",
              "        dataTable['output_type'] = 'display_data';\n",
              "        await google.colab.output.renderOutput(dataTable, element);\n",
              "        const docLink = document.createElement('div');\n",
              "        docLink.innerHTML = docLinkHtml;\n",
              "        element.appendChild(docLink);\n",
              "      }\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "\n",
              "<div id=\"df-96077c64-bedc-4728-ac95-9197b3e72102\">\n",
              "  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-96077c64-bedc-4728-ac95-9197b3e72102')\"\n",
              "            title=\"Suggest charts\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "     width=\"24px\">\n",
              "    <g>\n",
              "        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n",
              "    </g>\n",
              "</svg>\n",
              "  </button>\n",
              "\n",
              "<style>\n",
              "  .colab-df-quickchart {\n",
              "      --bg-color: #E8F0FE;\n",
              "      --fill-color: #1967D2;\n",
              "      --hover-bg-color: #E2EBFA;\n",
              "      --hover-fill-color: #174EA6;\n",
              "      --disabled-fill-color: #AAA;\n",
              "      --disabled-bg-color: #DDD;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart {\n",
              "      --bg-color: #3B4455;\n",
              "      --fill-color: #D2E3FC;\n",
              "      --hover-bg-color: #434B5C;\n",
              "      --hover-fill-color: #FFFFFF;\n",
              "      --disabled-bg-color: #3B4455;\n",
              "      --disabled-fill-color: #666;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart {\n",
              "    background-color: var(--bg-color);\n",
              "    border: none;\n",
              "    border-radius: 50%;\n",
              "    cursor: pointer;\n",
              "    display: none;\n",
              "    fill: var(--fill-color);\n",
              "    height: 32px;\n",
              "    padding: 0;\n",
              "    width: 32px;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart:hover {\n",
              "    background-color: var(--hover-bg-color);\n",
              "    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "    fill: var(--button-hover-fill-color);\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart-complete:disabled,\n",
              "  .colab-df-quickchart-complete:disabled:hover {\n",
              "    background-color: var(--disabled-bg-color);\n",
              "    fill: var(--disabled-fill-color);\n",
              "    box-shadow: none;\n",
              "  }\n",
              "\n",
              "  .colab-df-spinner {\n",
              "    border: 2px solid var(--fill-color);\n",
              "    border-color: transparent;\n",
              "    border-bottom-color: var(--fill-color);\n",
              "    animation:\n",
              "      spin 1s steps(1) infinite;\n",
              "  }\n",
              "\n",
              "  @keyframes spin {\n",
              "    0% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "      border-left-color: var(--fill-color);\n",
              "    }\n",
              "    20% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    30% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    40% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    60% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    80% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "    90% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "  }\n",
              "</style>\n",
              "\n",
              "  <script>\n",
              "    async function quickchart(key) {\n",
              "      const quickchartButtonEl =\n",
              "        document.querySelector('#' + key + ' button');\n",
              "      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n",
              "      quickchartButtonEl.classList.add('colab-df-spinner');\n",
              "      try {\n",
              "        const charts = await google.colab.kernel.invokeFunction(\n",
              "            'suggestCharts', [key], {});\n",
              "      } catch (error) {\n",
              "        console.error('Error during call to suggestCharts:', error);\n",
              "      }\n",
              "      quickchartButtonEl.classList.remove('colab-df-spinner');\n",
              "      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n",
              "    }\n",
              "    (() => {\n",
              "      let quickchartButtonEl =\n",
              "        document.querySelector('#df-96077c64-bedc-4728-ac95-9197b3e72102 button');\n",
              "      quickchartButtonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "    })();\n",
              "  </script>\n",
              "</div>\n",
              "\n",
              "    </div>\n",
              "  </div>\n"
            ],
            "application/vnd.google.colaboratory.intrinsic+json": {
              "type": "dataframe",
              "summary": "{\n  \"name\": \"display(df_mercado_trends_reset\",\n  \"rows\": 5,\n  \"fields\": [\n    {\n      \"column\": \"ds\",\n      \"properties\": {\n        \"dtype\": \"date\",\n        \"min\": \"2020-09-07 20:00:00\",\n        \"max\": \"2020-09-08 00:00:00\",\n        \"num_unique_values\": 5,\n        \"samples\": [\n          \"2020-09-07 21:00:00\",\n          \"2020-09-08 00:00:00\",\n          \"2020-09-07 22:00:00\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"y\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 11,\n        \"min\": 71,\n        \"max\": 97,\n        \"num_unique_values\": 4,\n        \"samples\": [\n          83,\n          97,\n          71\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"
            }
          },
          "metadata": {}
        }
      ],
      "source": [
        "# Using the df_mercado_trends DataFrame, reset the index so the date information is no longer the index\n",
        "df_mercado_trends_reset = df_mercado_trends.reset_index()\n",
        "\n",
        "\n",
        "# Label the columns ds and y so that the syntax is recognized by Prophet\n",
        "df_mercado_trends_reset = df_mercado_trends_reset.rename(columns={'Date': 'ds', 'Search Trends': 'y'})\n",
        "\n",
        "\n",
        "# Drop an NaN values from the prophet_df DataFrame\n",
        "df_mercado_trends_reset.dropna(inplace=True)\n",
        "\n",
        "\n",
        "# View the first and last five rows of the mercado_prophet_df DataFrame\n",
        "print(\"First five rows:\")\n",
        "display(df_mercado_trends_reset.head())\n",
        "\n",
        "print(\"\\nLast five rows:\")\n",
        "display(df_mercado_trends_reset.tail())\n"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "OQ22micErjqG",
        "outputId": "941c442b-461e-4256-f939-0912c4b2b1c2"
      },
      "outputs": [
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "DEBUG:cmdstanpy:input tempfile: /tmp/tmpv71myo1d/pemm6dqd.json\n",
            "DEBUG:cmdstanpy:input tempfile: /tmp/tmpv71myo1d/jn73k9_f.json\n",
            "DEBUG:cmdstanpy:idx 0\n",
            "DEBUG:cmdstanpy:running CmdStan, num_threads: None\n",
            "DEBUG:cmdstanpy:CmdStan args: ['/usr/local/lib/python3.10/dist-packages/prophet/stan_model/prophet_model.bin', 'random', 'seed=76365', 'data', 'file=/tmp/tmpv71myo1d/pemm6dqd.json', 'init=/tmp/tmpv71myo1d/jn73k9_f.json', 'output', 'file=/tmp/tmpv71myo1d/prophet_modelfyj3ic5r/prophet_model-20240409162928.csv', 'method=optimize', 'algorithm=lbfgs', 'iter=10000']\n",
            "16:29:28 - cmdstanpy - INFO - Chain [1] start processing\n",
            "INFO:cmdstanpy:Chain [1] start processing\n",
            "16:29:49 - cmdstanpy - INFO - Chain [1] done processing\n",
            "INFO:cmdstanpy:Chain [1] done processing\n"
          ]
        },
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "<prophet.forecaster.Prophet at 0x79e937fade10>"
            ]
          },
          "metadata": {},
          "execution_count": 24
        }
      ],
      "source": [
        "\n",
        "\n",
        "# # Initialize Prophet object\n",
        "# prophet_model = Prophet()\n",
        "\n",
        "# # Fit the model\n",
        "# prophet_model.fit(df_mercado_trends_reset)\n"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "id": "tXemEAJm12UM"
      },
      "outputs": [],
      "source": [
        "# Call the Prophet function, store as an object\n",
        "prophet_model = Prophet()\n",
        "\n",
        "# prophet_model.fit(df_mercado_trends_reset)\n",
        "\n"
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "prophet_model.fit(df_mercado_trends_reset)\n"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "C6GDRjpGs9qq",
        "outputId": "e627ebde-7eb7-4b3c-bafc-5fb463852e06"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "DEBUG:cmdstanpy:input tempfile: /tmp/tmpv71myo1d/5l_ez3lz.json\n",
            "DEBUG:cmdstanpy:input tempfile: /tmp/tmpv71myo1d/8klwfs0e.json\n",
            "DEBUG:cmdstanpy:idx 0\n",
            "DEBUG:cmdstanpy:running CmdStan, num_threads: None\n",
            "DEBUG:cmdstanpy:CmdStan args: ['/usr/local/lib/python3.10/dist-packages/prophet/stan_model/prophet_model.bin', 'random', 'seed=65856', 'data', 'file=/tmp/tmpv71myo1d/5l_ez3lz.json', 'init=/tmp/tmpv71myo1d/8klwfs0e.json', 'output', 'file=/tmp/tmpv71myo1d/prophet_modeldq02r0a3/prophet_model-20240409163219.csv', 'method=optimize', 'algorithm=lbfgs', 'iter=10000']\n",
            "16:32:19 - cmdstanpy - INFO - Chain [1] start processing\n",
            "INFO:cmdstanpy:Chain [1] start processing\n",
            "16:32:41 - cmdstanpy - INFO - Chain [1] done processing\n",
            "INFO:cmdstanpy:Chain [1] done processing\n"
          ]
        },
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "<prophet.forecaster.Prophet at 0x79e9349ef820>"
            ]
          },
          "metadata": {},
          "execution_count": 26
        }
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "9bou0iwL12UM",
        "outputId": "2264802b-10bf-468f-bf94-3f31b286adf8"
      },
      "outputs": [
        {
          "name": "stderr",
          "output_type": "stream",
          "text": [
            "14:27:35 - cmdstanpy - INFO - Chain [1] start processing\n",
            "14:27:43 - cmdstanpy - INFO - Chain [1] done processing\n"
          ]
        },
        {
          "data": {
            "text/plain": [
              "<prophet.forecaster.Prophet at 0x7f8a41b6c190>"
            ]
          },
          "execution_count": 36,
          "metadata": {},
          "output_type": "execute_result"
        }
      ],
      "source": [
        "# Fit the time-series model.\n",
        "prophet_model.fit(df_mercado_trends_reset)\n"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 224
        },
        "id": "BtJ5oDPE12UM",
        "outputId": "7e962e2e-3d93-4703-86d8-a822669d91c7"
      },
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Last five rows of the future dataframe:\n"
          ]
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "                       ds\n",
              "39101 2020-11-30 04:00:00\n",
              "39102 2020-11-30 05:00:00\n",
              "39103 2020-11-30 06:00:00\n",
              "39104 2020-11-30 07:00:00\n",
              "39105 2020-11-30 08:00:00"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-9456e0af-64a4-4f5c-b242-295b582de2ec\" class=\"colab-df-container\">\n",
              "    <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>ds</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>39101</th>\n",
              "      <td>2020-11-30 04:00:00</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>39102</th>\n",
              "      <td>2020-11-30 05:00:00</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>39103</th>\n",
              "      <td>2020-11-30 06:00:00</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>39104</th>\n",
              "      <td>2020-11-30 07:00:00</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>39105</th>\n",
              "      <td>2020-11-30 08:00:00</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>\n",
              "    <div class=\"colab-df-buttons\">\n",
              "\n",
              "  <div class=\"colab-df-container\">\n",
              "    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-9456e0af-64a4-4f5c-b242-295b582de2ec')\"\n",
              "            title=\"Convert this dataframe to an interactive table.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n",
              "    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "\n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    .colab-df-buttons div {\n",
              "      margin-bottom: 4px;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "    <script>\n",
              "      const buttonEl =\n",
              "        document.querySelector('#df-9456e0af-64a4-4f5c-b242-295b582de2ec button.colab-df-convert');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      async function convertToInteractive(key) {\n",
              "        const element = document.querySelector('#df-9456e0af-64a4-4f5c-b242-295b582de2ec');\n",
              "        const dataTable =\n",
              "          await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                    [key], {});\n",
              "        if (!dataTable) return;\n",
              "\n",
              "        const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "          + ' to learn more about interactive tables.';\n",
              "        element.innerHTML = '';\n",
              "        dataTable['output_type'] = 'display_data';\n",
              "        await google.colab.output.renderOutput(dataTable, element);\n",
              "        const docLink = document.createElement('div');\n",
              "        docLink.innerHTML = docLinkHtml;\n",
              "        element.appendChild(docLink);\n",
              "      }\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "\n",
              "<div id=\"df-edb2b03f-d26d-406c-a078-fd912e4be680\">\n",
              "  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-edb2b03f-d26d-406c-a078-fd912e4be680')\"\n",
              "            title=\"Suggest charts\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "     width=\"24px\">\n",
              "    <g>\n",
              "        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n",
              "    </g>\n",
              "</svg>\n",
              "  </button>\n",
              "\n",
              "<style>\n",
              "  .colab-df-quickchart {\n",
              "      --bg-color: #E8F0FE;\n",
              "      --fill-color: #1967D2;\n",
              "      --hover-bg-color: #E2EBFA;\n",
              "      --hover-fill-color: #174EA6;\n",
              "      --disabled-fill-color: #AAA;\n",
              "      --disabled-bg-color: #DDD;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart {\n",
              "      --bg-color: #3B4455;\n",
              "      --fill-color: #D2E3FC;\n",
              "      --hover-bg-color: #434B5C;\n",
              "      --hover-fill-color: #FFFFFF;\n",
              "      --disabled-bg-color: #3B4455;\n",
              "      --disabled-fill-color: #666;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart {\n",
              "    background-color: var(--bg-color);\n",
              "    border: none;\n",
              "    border-radius: 50%;\n",
              "    cursor: pointer;\n",
              "    display: none;\n",
              "    fill: var(--fill-color);\n",
              "    height: 32px;\n",
              "    padding: 0;\n",
              "    width: 32px;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart:hover {\n",
              "    background-color: var(--hover-bg-color);\n",
              "    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "    fill: var(--button-hover-fill-color);\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart-complete:disabled,\n",
              "  .colab-df-quickchart-complete:disabled:hover {\n",
              "    background-color: var(--disabled-bg-color);\n",
              "    fill: var(--disabled-fill-color);\n",
              "    box-shadow: none;\n",
              "  }\n",
              "\n",
              "  .colab-df-spinner {\n",
              "    border: 2px solid var(--fill-color);\n",
              "    border-color: transparent;\n",
              "    border-bottom-color: var(--fill-color);\n",
              "    animation:\n",
              "      spin 1s steps(1) infinite;\n",
              "  }\n",
              "\n",
              "  @keyframes spin {\n",
              "    0% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "      border-left-color: var(--fill-color);\n",
              "    }\n",
              "    20% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    30% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    40% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    60% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    80% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "    90% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "  }\n",
              "</style>\n",
              "\n",
              "  <script>\n",
              "    async function quickchart(key) {\n",
              "      const quickchartButtonEl =\n",
              "        document.querySelector('#' + key + ' button');\n",
              "      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n",
              "      quickchartButtonEl.classList.add('colab-df-spinner');\n",
              "      try {\n",
              "        const charts = await google.colab.kernel.invokeFunction(\n",
              "            'suggestCharts', [key], {});\n",
              "      } catch (error) {\n",
              "        console.error('Error during call to suggestCharts:', error);\n",
              "      }\n",
              "      quickchartButtonEl.classList.remove('colab-df-spinner');\n",
              "      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n",
              "    }\n",
              "    (() => {\n",
              "      let quickchartButtonEl =\n",
              "        document.querySelector('#df-edb2b03f-d26d-406c-a078-fd912e4be680 button');\n",
              "      quickchartButtonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "    })();\n",
              "  </script>\n",
              "</div>\n",
              "\n",
              "    </div>\n",
              "  </div>\n"
            ],
            "application/vnd.google.colaboratory.intrinsic+json": {
              "type": "dataframe",
              "summary": "{\n  \"name\": \"display(future_mercado_trends\",\n  \"rows\": 5,\n  \"fields\": [\n    {\n      \"column\": \"ds\",\n      \"properties\": {\n        \"dtype\": \"date\",\n        \"min\": \"2020-11-30 04:00:00\",\n        \"max\": \"2020-11-30 08:00:00\",\n        \"num_unique_values\": 5,\n        \"samples\": [\n          \"2020-11-30 05:00:00\",\n          \"2020-11-30 08:00:00\",\n          \"2020-11-30 06:00:00\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"
            }
          },
          "metadata": {}
        }
      ],
      "source": [
        "# Create a future dataframe to hold predictions\n",
        "# Make the prediction go out as far as 2000 hours (approx 80 days)\n",
        "future_mercado_trends = prophet_model.make_future_dataframe(periods=2000, freq='H')\n",
        "\n",
        "\n",
        "# View the last five rows of the future_mercado_trends DataFrame\n",
        "print(\"Last five rows of the future dataframe:\")\n",
        "display(future_mercado_trends.tail())"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 447
        },
        "id": "-JVSYE6C12UN",
        "outputId": "8d5365a7-190b-4082-fb8f-181e1ebd997e"
      },
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "First five rows of the forecast dataframe:\n"
          ]
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "                   ds      trend  yhat_lower  yhat_upper  trend_lower  \\\n",
              "0 2016-06-01 00:00:00  44.469500   81.013503   98.535722    44.469500   \n",
              "1 2016-06-01 01:00:00  44.470406   77.156691   94.156931    44.470406   \n",
              "2 2016-06-01 02:00:00  44.471312   67.111479   83.790276    44.471312   \n",
              "3 2016-06-01 03:00:00  44.472218   52.052440   69.198304    44.472218   \n",
              "4 2016-06-01 04:00:00  44.473124   35.152408   52.336802    44.473124   \n",
              "\n",
              "   trend_upper  additive_terms  additive_terms_lower  additive_terms_upper  \\\n",
              "0    44.469500       45.159722             45.159722             45.159722   \n",
              "1    44.470406       41.605529             41.605529             41.605529   \n",
              "2    44.471312       31.282049             31.282049             31.282049   \n",
              "3    44.472218       16.014826             16.014826             16.014826   \n",
              "4    44.473124       -1.100073             -1.100073             -1.100073   \n",
              "\n",
              "       daily  ...    weekly  weekly_lower  weekly_upper    yearly  \\\n",
              "0  41.452703  ...  1.860594      1.860594      1.860594  1.846426   \n",
              "1  37.943556  ...  1.810498      1.810498      1.810498  1.851474   \n",
              "2  27.656646  ...  1.768912      1.768912      1.768912  1.856491   \n",
              "3  12.417424  ...  1.735926      1.735926      1.735926  1.861476   \n",
              "4  -4.677999  ...  1.711496      1.711496      1.711496  1.866430   \n",
              "\n",
              "   yearly_lower  yearly_upper  multiplicative_terms  \\\n",
              "0      1.846426      1.846426                   0.0   \n",
              "1      1.851474      1.851474                   0.0   \n",
              "2      1.856491      1.856491                   0.0   \n",
              "3      1.861476      1.861476                   0.0   \n",
              "4      1.866430      1.866430                   0.0   \n",
              "\n",
              "   multiplicative_terms_lower  multiplicative_terms_upper       yhat  \n",
              "0                         0.0                         0.0  89.629222  \n",
              "1                         0.0                         0.0  86.075935  \n",
              "2                         0.0                         0.0  75.753361  \n",
              "3                         0.0                         0.0  60.487045  \n",
              "4                         0.0                         0.0  43.373051  \n",
              "\n",
              "[5 rows x 22 columns]"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-68840918-5cfe-46c7-9b8d-0934cd1afb3b\" class=\"colab-df-container\">\n",
              "    <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>ds</th>\n",
              "      <th>trend</th>\n",
              "      <th>yhat_lower</th>\n",
              "      <th>yhat_upper</th>\n",
              "      <th>trend_lower</th>\n",
              "      <th>trend_upper</th>\n",
              "      <th>additive_terms</th>\n",
              "      <th>additive_terms_lower</th>\n",
              "      <th>additive_terms_upper</th>\n",
              "      <th>daily</th>\n",
              "      <th>...</th>\n",
              "      <th>weekly</th>\n",
              "      <th>weekly_lower</th>\n",
              "      <th>weekly_upper</th>\n",
              "      <th>yearly</th>\n",
              "      <th>yearly_lower</th>\n",
              "      <th>yearly_upper</th>\n",
              "      <th>multiplicative_terms</th>\n",
              "      <th>multiplicative_terms_lower</th>\n",
              "      <th>multiplicative_terms_upper</th>\n",
              "      <th>yhat</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>2016-06-01 00:00:00</td>\n",
              "      <td>44.469500</td>\n",
              "      <td>81.013503</td>\n",
              "      <td>98.535722</td>\n",
              "      <td>44.469500</td>\n",
              "      <td>44.469500</td>\n",
              "      <td>45.159722</td>\n",
              "      <td>45.159722</td>\n",
              "      <td>45.159722</td>\n",
              "      <td>41.452703</td>\n",
              "      <td>...</td>\n",
              "      <td>1.860594</td>\n",
              "      <td>1.860594</td>\n",
              "      <td>1.860594</td>\n",
              "      <td>1.846426</td>\n",
              "      <td>1.846426</td>\n",
              "      <td>1.846426</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>89.629222</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>2016-06-01 01:00:00</td>\n",
              "      <td>44.470406</td>\n",
              "      <td>77.156691</td>\n",
              "      <td>94.156931</td>\n",
              "      <td>44.470406</td>\n",
              "      <td>44.470406</td>\n",
              "      <td>41.605529</td>\n",
              "      <td>41.605529</td>\n",
              "      <td>41.605529</td>\n",
              "      <td>37.943556</td>\n",
              "      <td>...</td>\n",
              "      <td>1.810498</td>\n",
              "      <td>1.810498</td>\n",
              "      <td>1.810498</td>\n",
              "      <td>1.851474</td>\n",
              "      <td>1.851474</td>\n",
              "      <td>1.851474</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>86.075935</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>2016-06-01 02:00:00</td>\n",
              "      <td>44.471312</td>\n",
              "      <td>67.111479</td>\n",
              "      <td>83.790276</td>\n",
              "      <td>44.471312</td>\n",
              "      <td>44.471312</td>\n",
              "      <td>31.282049</td>\n",
              "      <td>31.282049</td>\n",
              "      <td>31.282049</td>\n",
              "      <td>27.656646</td>\n",
              "      <td>...</td>\n",
              "      <td>1.768912</td>\n",
              "      <td>1.768912</td>\n",
              "      <td>1.768912</td>\n",
              "      <td>1.856491</td>\n",
              "      <td>1.856491</td>\n",
              "      <td>1.856491</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>75.753361</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>2016-06-01 03:00:00</td>\n",
              "      <td>44.472218</td>\n",
              "      <td>52.052440</td>\n",
              "      <td>69.198304</td>\n",
              "      <td>44.472218</td>\n",
              "      <td>44.472218</td>\n",
              "      <td>16.014826</td>\n",
              "      <td>16.014826</td>\n",
              "      <td>16.014826</td>\n",
              "      <td>12.417424</td>\n",
              "      <td>...</td>\n",
              "      <td>1.735926</td>\n",
              "      <td>1.735926</td>\n",
              "      <td>1.735926</td>\n",
              "      <td>1.861476</td>\n",
              "      <td>1.861476</td>\n",
              "      <td>1.861476</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>60.487045</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>2016-06-01 04:00:00</td>\n",
              "      <td>44.473124</td>\n",
              "      <td>35.152408</td>\n",
              "      <td>52.336802</td>\n",
              "      <td>44.473124</td>\n",
              "      <td>44.473124</td>\n",
              "      <td>-1.100073</td>\n",
              "      <td>-1.100073</td>\n",
              "      <td>-1.100073</td>\n",
              "      <td>-4.677999</td>\n",
              "      <td>...</td>\n",
              "      <td>1.711496</td>\n",
              "      <td>1.711496</td>\n",
              "      <td>1.711496</td>\n",
              "      <td>1.866430</td>\n",
              "      <td>1.866430</td>\n",
              "      <td>1.866430</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>43.373051</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "<p>5 rows × 22 columns</p>\n",
              "</div>\n",
              "    <div class=\"colab-df-buttons\">\n",
              "\n",
              "  <div class=\"colab-df-container\">\n",
              "    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-68840918-5cfe-46c7-9b8d-0934cd1afb3b')\"\n",
              "            title=\"Convert this dataframe to an interactive table.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n",
              "    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "\n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    .colab-df-buttons div {\n",
              "      margin-bottom: 4px;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "    <script>\n",
              "      const buttonEl =\n",
              "        document.querySelector('#df-68840918-5cfe-46c7-9b8d-0934cd1afb3b button.colab-df-convert');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      async function convertToInteractive(key) {\n",
              "        const element = document.querySelector('#df-68840918-5cfe-46c7-9b8d-0934cd1afb3b');\n",
              "        const dataTable =\n",
              "          await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                    [key], {});\n",
              "        if (!dataTable) return;\n",
              "\n",
              "        const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "          + ' to learn more about interactive tables.';\n",
              "        element.innerHTML = '';\n",
              "        dataTable['output_type'] = 'display_data';\n",
              "        await google.colab.output.renderOutput(dataTable, element);\n",
              "        const docLink = document.createElement('div');\n",
              "        docLink.innerHTML = docLinkHtml;\n",
              "        element.appendChild(docLink);\n",
              "      }\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "\n",
              "<div id=\"df-460a77c0-4214-491d-a440-9d77fbfd1a00\">\n",
              "  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-460a77c0-4214-491d-a440-9d77fbfd1a00')\"\n",
              "            title=\"Suggest charts\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "     width=\"24px\">\n",
              "    <g>\n",
              "        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n",
              "    </g>\n",
              "</svg>\n",
              "  </button>\n",
              "\n",
              "<style>\n",
              "  .colab-df-quickchart {\n",
              "      --bg-color: #E8F0FE;\n",
              "      --fill-color: #1967D2;\n",
              "      --hover-bg-color: #E2EBFA;\n",
              "      --hover-fill-color: #174EA6;\n",
              "      --disabled-fill-color: #AAA;\n",
              "      --disabled-bg-color: #DDD;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart {\n",
              "      --bg-color: #3B4455;\n",
              "      --fill-color: #D2E3FC;\n",
              "      --hover-bg-color: #434B5C;\n",
              "      --hover-fill-color: #FFFFFF;\n",
              "      --disabled-bg-color: #3B4455;\n",
              "      --disabled-fill-color: #666;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart {\n",
              "    background-color: var(--bg-color);\n",
              "    border: none;\n",
              "    border-radius: 50%;\n",
              "    cursor: pointer;\n",
              "    display: none;\n",
              "    fill: var(--fill-color);\n",
              "    height: 32px;\n",
              "    padding: 0;\n",
              "    width: 32px;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart:hover {\n",
              "    background-color: var(--hover-bg-color);\n",
              "    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "    fill: var(--button-hover-fill-color);\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart-complete:disabled,\n",
              "  .colab-df-quickchart-complete:disabled:hover {\n",
              "    background-color: var(--disabled-bg-color);\n",
              "    fill: var(--disabled-fill-color);\n",
              "    box-shadow: none;\n",
              "  }\n",
              "\n",
              "  .colab-df-spinner {\n",
              "    border: 2px solid var(--fill-color);\n",
              "    border-color: transparent;\n",
              "    border-bottom-color: var(--fill-color);\n",
              "    animation:\n",
              "      spin 1s steps(1) infinite;\n",
              "  }\n",
              "\n",
              "  @keyframes spin {\n",
              "    0% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "      border-left-color: var(--fill-color);\n",
              "    }\n",
              "    20% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    30% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    40% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    60% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    80% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "    90% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "  }\n",
              "</style>\n",
              "\n",
              "  <script>\n",
              "    async function quickchart(key) {\n",
              "      const quickchartButtonEl =\n",
              "        document.querySelector('#' + key + ' button');\n",
              "      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n",
              "      quickchartButtonEl.classList.add('colab-df-spinner');\n",
              "      try {\n",
              "        const charts = await google.colab.kernel.invokeFunction(\n",
              "            'suggestCharts', [key], {});\n",
              "      } catch (error) {\n",
              "        console.error('Error during call to suggestCharts:', error);\n",
              "      }\n",
              "      quickchartButtonEl.classList.remove('colab-df-spinner');\n",
              "      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n",
              "    }\n",
              "    (() => {\n",
              "      let quickchartButtonEl =\n",
              "        document.querySelector('#df-460a77c0-4214-491d-a440-9d77fbfd1a00 button');\n",
              "      quickchartButtonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "    })();\n",
              "  </script>\n",
              "</div>\n",
              "\n",
              "    </div>\n",
              "  </div>\n"
            ],
            "application/vnd.google.colaboratory.intrinsic+json": {
              "type": "dataframe"
            }
          },
          "metadata": {}
        }
      ],
      "source": [
        "# Make the predictions for the trend data using the future_mercado_trends DataFrame\n",
        "forecast_mercado_trends = prophet_model.predict(future_mercado_trends)\n",
        "\n",
        "\n",
        "# Display the first five rows of the forecast_mercado_trends DataFrame\n",
        "print(\"First five rows of the forecast dataframe:\")\n",
        "display(forecast_mercado_trends.head())"
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "l5jjK41T12UN"
      },
      "source": [
        "#### Step 2: After estimating the model, plot the forecast. How's the near-term forecast for the popularity of MercadoLibre?"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 607
        },
        "id": "wNf28QS212UN",
        "outputId": "f4f68798-ef11-4942-e725-a96c4daf0450"
      },
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 1000x600 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {}
        }
      ],
      "source": [
        "# Plot the Prophet predictions for the Mercado trends data\n",
        "fig = prophet_model.plot(forecast_mercado_trends)\n",
        "plt.xlabel('ds')\n",
        "plt.ylabel('y')\n",
        "# plt.title('Prophet Predictions for Mercado Trends Data')\n",
        "plt.show()"
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "p3twBdEn12UO"
      },
      "source": [
        "##### Answer the following question:"
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "CDsZWZwE12UO"
      },
      "source": [
        "**Question:**  How's the near-term forecast for the popularity of MercadoLibre?\n",
        "\n",
        "**Answer:**\n",
        "The near-term forecast seems to show it will be dipping soon."
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "MY3-VMd612UO"
      },
      "source": [
        "#### Step 3: Plot the individual time series components of the model to answer the following questions:\n",
        "\n",
        "* What time of day exhibits the greatest popularity?\n",
        "\n",
        "* Which day of the week gets the most search traffic?\n",
        "\n",
        "* What's the lowest point for search traffic in the calendar year?\n"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 237
        },
        "id": "4r31Spg-12UO",
        "outputId": "4e099042-d89b-4319-b300-93a5923110ac"
      },
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "                          yhat  yhat_lower  yhat_upper\n",
              "ds                                                    \n",
              "2016-06-01 00:00:00  89.629222   81.013503   98.535722\n",
              "2016-06-01 01:00:00  86.075935   77.156691   94.156931\n",
              "2016-06-01 02:00:00  75.753361   67.111479   83.790276\n",
              "2016-06-01 03:00:00  60.487045   52.052440   69.198304\n",
              "2016-06-01 04:00:00  43.373051   35.152408   52.336802"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-5d8c055f-96a7-42b3-b650-23a3d93c0edc\" class=\"colab-df-container\">\n",
              "    <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>yhat</th>\n",
              "      <th>yhat_lower</th>\n",
              "      <th>yhat_upper</th>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>ds</th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>2016-06-01 00:00:00</th>\n",
              "      <td>89.629222</td>\n",
              "      <td>81.013503</td>\n",
              "      <td>98.535722</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2016-06-01 01:00:00</th>\n",
              "      <td>86.075935</td>\n",
              "      <td>77.156691</td>\n",
              "      <td>94.156931</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2016-06-01 02:00:00</th>\n",
              "      <td>75.753361</td>\n",
              "      <td>67.111479</td>\n",
              "      <td>83.790276</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2016-06-01 03:00:00</th>\n",
              "      <td>60.487045</td>\n",
              "      <td>52.052440</td>\n",
              "      <td>69.198304</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2016-06-01 04:00:00</th>\n",
              "      <td>43.373051</td>\n",
              "      <td>35.152408</td>\n",
              "      <td>52.336802</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>\n",
              "    <div class=\"colab-df-buttons\">\n",
              "\n",
              "  <div class=\"colab-df-container\">\n",
              "    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-5d8c055f-96a7-42b3-b650-23a3d93c0edc')\"\n",
              "            title=\"Convert this dataframe to an interactive table.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n",
              "    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "\n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    .colab-df-buttons div {\n",
              "      margin-bottom: 4px;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "    <script>\n",
              "      const buttonEl =\n",
              "        document.querySelector('#df-5d8c055f-96a7-42b3-b650-23a3d93c0edc button.colab-df-convert');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      async function convertToInteractive(key) {\n",
              "        const element = document.querySelector('#df-5d8c055f-96a7-42b3-b650-23a3d93c0edc');\n",
              "        const dataTable =\n",
              "          await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                    [key], {});\n",
              "        if (!dataTable) return;\n",
              "\n",
              "        const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "          + ' to learn more about interactive tables.';\n",
              "        element.innerHTML = '';\n",
              "        dataTable['output_type'] = 'display_data';\n",
              "        await google.colab.output.renderOutput(dataTable, element);\n",
              "        const docLink = document.createElement('div');\n",
              "        docLink.innerHTML = docLinkHtml;\n",
              "        element.appendChild(docLink);\n",
              "      }\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "\n",
              "<div id=\"df-d3b4a6f3-b6e3-4eb5-941e-66dd50073942\">\n",
              "  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-d3b4a6f3-b6e3-4eb5-941e-66dd50073942')\"\n",
              "            title=\"Suggest charts\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "     width=\"24px\">\n",
              "    <g>\n",
              "        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n",
              "    </g>\n",
              "</svg>\n",
              "  </button>\n",
              "\n",
              "<style>\n",
              "  .colab-df-quickchart {\n",
              "      --bg-color: #E8F0FE;\n",
              "      --fill-color: #1967D2;\n",
              "      --hover-bg-color: #E2EBFA;\n",
              "      --hover-fill-color: #174EA6;\n",
              "      --disabled-fill-color: #AAA;\n",
              "      --disabled-bg-color: #DDD;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart {\n",
              "      --bg-color: #3B4455;\n",
              "      --fill-color: #D2E3FC;\n",
              "      --hover-bg-color: #434B5C;\n",
              "      --hover-fill-color: #FFFFFF;\n",
              "      --disabled-bg-color: #3B4455;\n",
              "      --disabled-fill-color: #666;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart {\n",
              "    background-color: var(--bg-color);\n",
              "    border: none;\n",
              "    border-radius: 50%;\n",
              "    cursor: pointer;\n",
              "    display: none;\n",
              "    fill: var(--fill-color);\n",
              "    height: 32px;\n",
              "    padding: 0;\n",
              "    width: 32px;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart:hover {\n",
              "    background-color: var(--hover-bg-color);\n",
              "    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "    fill: var(--button-hover-fill-color);\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart-complete:disabled,\n",
              "  .colab-df-quickchart-complete:disabled:hover {\n",
              "    background-color: var(--disabled-bg-color);\n",
              "    fill: var(--disabled-fill-color);\n",
              "    box-shadow: none;\n",
              "  }\n",
              "\n",
              "  .colab-df-spinner {\n",
              "    border: 2px solid var(--fill-color);\n",
              "    border-color: transparent;\n",
              "    border-bottom-color: var(--fill-color);\n",
              "    animation:\n",
              "      spin 1s steps(1) infinite;\n",
              "  }\n",
              "\n",
              "  @keyframes spin {\n",
              "    0% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "      border-left-color: var(--fill-color);\n",
              "    }\n",
              "    20% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    30% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    40% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    60% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    80% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "    90% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "  }\n",
              "</style>\n",
              "\n",
              "  <script>\n",
              "    async function quickchart(key) {\n",
              "      const quickchartButtonEl =\n",
              "        document.querySelector('#' + key + ' button');\n",
              "      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n",
              "      quickchartButtonEl.classList.add('colab-df-spinner');\n",
              "      try {\n",
              "        const charts = await google.colab.kernel.invokeFunction(\n",
              "            'suggestCharts', [key], {});\n",
              "      } catch (error) {\n",
              "        console.error('Error during call to suggestCharts:', error);\n",
              "      }\n",
              "      quickchartButtonEl.classList.remove('colab-df-spinner');\n",
              "      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n",
              "    }\n",
              "    (() => {\n",
              "      let quickchartButtonEl =\n",
              "        document.querySelector('#df-d3b4a6f3-b6e3-4eb5-941e-66dd50073942 button');\n",
              "      quickchartButtonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "    })();\n",
              "  </script>\n",
              "</div>\n",
              "\n",
              "    </div>\n",
              "  </div>\n"
            ],
            "application/vnd.google.colaboratory.intrinsic+json": {
              "type": "dataframe",
              "summary": "{\n  \"name\": \"# View the only the yhat,yhat_lower and yhat_upper columns from the DataFrame\",\n  \"rows\": 5,\n  \"fields\": [\n    {\n      \"column\": \"ds\",\n      \"properties\": {\n        \"dtype\": \"date\",\n        \"min\": \"2016-06-01 00:00:00\",\n        \"max\": \"2016-06-01 04:00:00\",\n        \"num_unique_values\": 5,\n        \"samples\": [\n          \"2016-06-01 01:00:00\",\n          \"2016-06-01 04:00:00\",\n          \"2016-06-01 02:00:00\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"yhat\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 19.17469931373415,\n        \"min\": 43.37305149630022,\n        \"max\": 89.62922205453468,\n        \"num_unique_values\": 5,\n        \"samples\": [\n          86.07593476513429,\n          43.37305149630022,\n          75.75336096492545\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"yhat_lower\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 18.946480002488407,\n        \"min\": 35.152407866574364,\n        \"max\": 81.01350333699142,\n        \"num_unique_values\": 5,\n        \"samples\": [\n          77.15669098922278,\n          35.152407866574364,\n          67.11147946813874\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"yhat_upper\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 18.97038084541201,\n        \"min\": 52.33680153109346,\n        \"max\": 98.53572162491281,\n        \"num_unique_values\": 5,\n        \"samples\": [\n          94.15693085823379,\n          52.33680153109346,\n          83.7902759072642\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"
            }
          },
          "metadata": {}
        }
      ],
      "source": [
        "# Set the index in the forecast_mercado_trends DataFrame to the ds datetime column\n",
        "# Set the index to the ds datetime column\n",
        "# forecast_mercado_trends.set_index('ds', inplace=True)\n",
        "\n",
        "# View only the yhat, yhat_lower, and yhat_upper columns\n",
        "forecast_selected_columns = forecast_mercado_trends[['yhat', 'yhat_lower', 'yhat_upper']]\n",
        "\n",
        "# Display the DataFrame with the selected columns\n",
        "display(forecast_selected_columns.head())\n",
        "\n",
        "\n"
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "# Importing necessary libraries\n",
        "\n",
        "# Plotting the data\n",
        "plt.figure(figsize=(7, 6))\n",
        "plt.plot(forecast_mercado_trends.index[-2000:], forecast_mercado_trends['yhat'].tail(2000), label='yhat', color='blue')\n",
        "plt.plot(forecast_mercado_trends.index[-2000:], forecast_mercado_trends['yhat_lower'].tail(2000), label='yhat_lower', color='orange', linestyle='-')\n",
        "plt.plot(forecast_mercado_trends.index[-2000:], forecast_mercado_trends['yhat_upper'].tail(2000), label='yhat_upper', color='green', linestyle='-')\n",
        "# plt.xlabel('Date')\n",
        "# plt.ylabel('Search Trends')\n",
        "# plt.title('Prophet Predictions for Mercado Trends Data')\n",
        "plt.legend(loc='lower right')\n",
        "plt.grid(False)\n",
        "plt.show()\n"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 522
        },
        "id": "NN4mgGS1yYY_",
        "outputId": "8f3bf8aa-bd67-490a-f599-16cd0c8bceec"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 700x600 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {}
        }
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "LSAl_1m812UO"
      },
      "source": [
        "Solutions Note: `yhat` represents the most likely (average) forecast, whereas `yhat_lower` and `yhat_upper` represents the worst and best case prediction (based on what are known as 95% confidence intervals)."
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 337
        },
        "id": "qYJDjsb312UP",
        "outputId": "da09564d-92be-4f66-c3d2-9b302531db90"
      },
      "outputs": [
        {
          "data": {
            "text/plain": [
              "<Axes: xlabel='ds'>"
            ]
          },
          "execution_count": 41,
          "metadata": {},
          "output_type": "execute_result"
        },
        {
          "data": {
            "image/png": "",
            "text/plain": [
              "<Figure size 640x480 with 1 Axes>"
            ]
          },
          "metadata": {},
          "output_type": "display_data"
        }
      ],
      "source": [
        "# From the forecast_mercado_trends DataFrame, plot the data to visualize\n",
        "#  the yhat, yhat_lower, and yhat_upper columns over the last 2000 hours\n"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 1000
        },
        "id": "eetFbEwC12UP",
        "outputId": "97252d75-2d29-4b81-f531-d3598c47756a"
      },
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 900x1200 with 4 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {}
        }
      ],
      "source": [
        "# Reset the index in the forecast_mercado_trends DataFrame\n",
        "forecast_mercado_trends_reset = forecast_mercado_trends.reset_index()\n",
        "\n",
        "# Use the plot_components function to visualize the forecast results\n",
        "prophet_model.plot_components(forecast_mercado_trends_reset)\n",
        "plt.show()\n",
        "\n",
        "# Use the plot_components function to visualize the forecast results\n",
        "# for the forecast_canada DataFrame\n"
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "Xan9nO9O12UP"
      },
      "source": [
        "##### Answer the following questions:"
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "FmWgULWo12UQ"
      },
      "source": [
        "**Question:** What time of day exhibits the greatest popularity?\n",
        "\n",
        "**Answer:** Midnight tends to get the greatest popularity."
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "JkkXUATk12UQ"
      },
      "source": [
        "**Question:** Which day of week gets the most search traffic?\n",
        "   \n",
        "**Answer:** Tuesday gets the most search traffic."
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "EUeR3iHu12UQ"
      },
      "source": [
        "**Question:** What's the lowest point for search traffic in the calendar year?\n",
        "\n",
        "**Answer:** The lowest point is at the -3.5 marker in October.\n"
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "4Hu6YdwNrjqI"
      },
      "source": []
    }
  ],
  "metadata": {
    "colab": {
      "provenance": [],
      "include_colab_link": true
    },
    "kernelspec": {
      "display_name": "Python 3 (ipykernel)",
      "language": "python",
      "name": "python3"
    },
    "language_info": {
      "codemirror_mode": {
        "name": "ipython",
        "version": 3
      },
      "file_extension": ".py",
      "mimetype": "text/x-python",
      "name": "python",
      "nbconvert_exporter": "python",
      "pygments_lexer": "ipython3",
      "version": "3.11.5"
    }
  },
  "nbformat": 4,
  "nbformat_minor": 0
}